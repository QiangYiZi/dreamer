ARM GAS  C:\temp\ccmYnzEf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_ADC1_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_ADC1_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_ADC1_Init:
  27              	.LFB332:
  28              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** extern uint32_t Current_buffer[8];   /*∞À¬∑µÁ¡˜¥Ê¥¢∆˜*/
  25:Core/Src/adc.c **** extern uint32_t Tempter_buffer[8];   /*∞À¬∑µÁ—π¥Ê¥¢∆˜*/
  26:Core/Src/adc.c **** extern uint32_t tempter_A[6];
  27:Core/Src/adc.c **** extern uint32_t tempter_B[2];
  28:Core/Src/adc.c **** extern uint32_t Volt_buffer[1];      /*µÁ—π≤…ºØ¥Ê¥¢∆˜*/
  29:Core/Src/adc.c **** extern uint32_t Watt_buffer_A[1];      /*ºÏ≤®∆˜1*/
  30:Core/Src/adc.c **** extern uint32_t Watt_buffer_B[1];      /*ºÏ≤®∆˜2*/
ARM GAS  C:\temp\ccmYnzEf.s 			page 2


  31:Core/Src/adc.c **** /* USER CODE END 0 */
  32:Core/Src/adc.c **** 
  33:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  34:Core/Src/adc.c **** ADC_HandleTypeDef hadc2;
  35:Core/Src/adc.c **** ADC_HandleTypeDef hadc3;
  36:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  37:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc2;
  38:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc3;
  39:Core/Src/adc.c **** 
  40:Core/Src/adc.c **** /* ADC1 init function */
  41:Core/Src/adc.c **** void MX_ADC1_Init(void)
  42:Core/Src/adc.c **** {
  29              		.loc 1 42 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 72
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 92B0     		sub	sp, sp, #72
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 80
  43:Core/Src/adc.c **** 
  44:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  45:Core/Src/adc.c **** /*Áî®Êà∑ADC‰ΩøËÉΩÔºåÂåÖÊã¨ADCÈÖçÁΩÆÔø??*/
  46:Core/Src/adc.c **** 
  47:Core/Src/adc.c **** 
  48:Core/Src/adc.c **** 
  49:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  50:Core/Src/adc.c **** 
  51:Core/Src/adc.c ****   ADC_MultiModeTypeDef multimode = {0};
  41              		.loc 1 51 3 view .LVU1
  42              		.loc 1 51 24 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0F94     		str	r4, [sp, #60]
  45 0008 1094     		str	r4, [sp, #64]
  46 000a 1194     		str	r4, [sp, #68]
  52:Core/Src/adc.c ****   ADC_AnalogWDGConfTypeDef AnalogWDGConfig = {0};
  47              		.loc 1 52 3 is_stmt 1 view .LVU3
  48              		.loc 1 52 28 is_stmt 0 view .LVU4
  49 000c 0894     		str	r4, [sp, #32]
  50 000e 0994     		str	r4, [sp, #36]
  51 0010 0A94     		str	r4, [sp, #40]
  52 0012 0B94     		str	r4, [sp, #44]
  53 0014 0C94     		str	r4, [sp, #48]
  54 0016 0D94     		str	r4, [sp, #52]
  55 0018 0E94     		str	r4, [sp, #56]
  53:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  56              		.loc 1 53 3 is_stmt 1 view .LVU5
  57              		.loc 1 53 26 is_stmt 0 view .LVU6
  58 001a 2022     		movs	r2, #32
  59 001c 2146     		mov	r1, r4
  60 001e 6846     		mov	r0, sp
  61 0020 FFF7FEFF 		bl	memset
  62              	.LVL0:
ARM GAS  C:\temp\ccmYnzEf.s 			page 3


  54:Core/Src/adc.c **** 
  55:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  56:Core/Src/adc.c **** 
  57:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  58:Core/Src/adc.c **** 
  59:Core/Src/adc.c ****   /** Common config
  60:Core/Src/adc.c ****   */
  61:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  63              		.loc 1 61 3 is_stmt 1 view .LVU7
  64              		.loc 1 61 18 is_stmt 0 view .LVU8
  65 0024 5B48     		ldr	r0, .L25
  66 0026 4FF0A043 		mov	r3, #1342177280
  67 002a 0360     		str	r3, [r0]
  62:Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  68              		.loc 1 62 3 is_stmt 1 view .LVU9
  69              		.loc 1 62 29 is_stmt 0 view .LVU10
  70 002c 4FF44033 		mov	r3, #196608
  71 0030 4360     		str	r3, [r0, #4]
  63:Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  72              		.loc 1 63 3 is_stmt 1 view .LVU11
  73              		.loc 1 63 25 is_stmt 0 view .LVU12
  74 0032 8460     		str	r4, [r0, #8]
  64:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  75              		.loc 1 64 3 is_stmt 1 view .LVU13
  76              		.loc 1 64 24 is_stmt 0 view .LVU14
  77 0034 C460     		str	r4, [r0, #12]
  65:Core/Src/adc.c ****   hadc1.Init.GainCompensation = 0;
  78              		.loc 1 65 3 is_stmt 1 view .LVU15
  79              		.loc 1 65 31 is_stmt 0 view .LVU16
  80 0036 0461     		str	r4, [r0, #16]
  66:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  81              		.loc 1 66 3 is_stmt 1 view .LVU17
  82              		.loc 1 66 27 is_stmt 0 view .LVU18
  83 0038 0123     		movs	r3, #1
  84 003a 4361     		str	r3, [r0, #20]
  67:Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
  85              		.loc 1 67 3 is_stmt 1 view .LVU19
  86              		.loc 1 67 27 is_stmt 0 view .LVU20
  87 003c 0822     		movs	r2, #8
  88 003e 8261     		str	r2, [r0, #24]
  68:Core/Src/adc.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  89              		.loc 1 68 3 is_stmt 1 view .LVU21
  90              		.loc 1 68 31 is_stmt 0 view .LVU22
  91 0040 0477     		strb	r4, [r0, #28]
  69:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
  92              		.loc 1 69 3 is_stmt 1 view .LVU23
  93              		.loc 1 69 33 is_stmt 0 view .LVU24
  94 0042 4377     		strb	r3, [r0, #29]
  70:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 8;
  95              		.loc 1 70 3 is_stmt 1 view .LVU25
  96              		.loc 1 70 30 is_stmt 0 view .LVU26
  97 0044 0262     		str	r2, [r0, #32]
  71:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  98              		.loc 1 71 3 is_stmt 1 view .LVU27
  99              		.loc 1 71 36 is_stmt 0 view .LVU28
 100 0046 80F82440 		strb	r4, [r0, #36]
  72:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  C:\temp\ccmYnzEf.s 			page 4


 101              		.loc 1 72 3 is_stmt 1 view .LVU29
 102              		.loc 1 72 31 is_stmt 0 view .LVU30
 103 004a C462     		str	r4, [r0, #44]
  73:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 104              		.loc 1 73 3 is_stmt 1 view .LVU31
 105              		.loc 1 73 35 is_stmt 0 view .LVU32
 106 004c 0463     		str	r4, [r0, #48]
  74:Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 107              		.loc 1 74 3 is_stmt 1 view .LVU33
 108              		.loc 1 74 36 is_stmt 0 view .LVU34
 109 004e 80F83830 		strb	r3, [r0, #56]
  75:Core/Src/adc.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 110              		.loc 1 75 3 is_stmt 1 view .LVU35
 111              		.loc 1 75 22 is_stmt 0 view .LVU36
 112 0052 C463     		str	r4, [r0, #60]
  76:Core/Src/adc.c ****   hadc1.Init.OversamplingMode = DISABLE;
 113              		.loc 1 76 3 is_stmt 1 view .LVU37
 114              		.loc 1 76 31 is_stmt 0 view .LVU38
 115 0054 80F84040 		strb	r4, [r0, #64]
  77:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 116              		.loc 1 77 3 is_stmt 1 view .LVU39
 117              		.loc 1 77 7 is_stmt 0 view .LVU40
 118 0058 FFF7FEFF 		bl	HAL_ADC_Init
 119              	.LVL1:
 120              		.loc 1 77 6 view .LVU41
 121 005c 0028     		cmp	r0, #0
 122 005e 77D1     		bne	.L14
 123              	.L2:
  78:Core/Src/adc.c ****   {
  79:Core/Src/adc.c ****     Error_Handler();
  80:Core/Src/adc.c ****   }
  81:Core/Src/adc.c **** 
  82:Core/Src/adc.c ****   /** Configure the ADC multi-mode
  83:Core/Src/adc.c ****   */
  84:Core/Src/adc.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 124              		.loc 1 84 3 is_stmt 1 view .LVU42
 125              		.loc 1 84 18 is_stmt 0 view .LVU43
 126 0060 0023     		movs	r3, #0
 127 0062 0F93     		str	r3, [sp, #60]
  85:Core/Src/adc.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 128              		.loc 1 85 3 is_stmt 1 view .LVU44
 129              		.loc 1 85 7 is_stmt 0 view .LVU45
 130 0064 0FA9     		add	r1, sp, #60
 131 0066 4B48     		ldr	r0, .L25
 132 0068 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 133              	.LVL2:
 134              		.loc 1 85 6 view .LVU46
 135 006c 0028     		cmp	r0, #0
 136 006e 72D1     		bne	.L15
 137              	.L3:
  86:Core/Src/adc.c ****   {
  87:Core/Src/adc.c ****     Error_Handler();
  88:Core/Src/adc.c ****   }
  89:Core/Src/adc.c **** 
  90:Core/Src/adc.c ****   /** Configure Analog WatchDog 1
  91:Core/Src/adc.c ****   */
  92:Core/Src/adc.c ****   AnalogWDGConfig.WatchdogNumber = ADC_ANALOGWATCHDOG_1;
ARM GAS  C:\temp\ccmYnzEf.s 			page 5


 138              		.loc 1 92 3 is_stmt 1 view .LVU47
 139              		.loc 1 92 34 is_stmt 0 view .LVU48
 140 0070 494B     		ldr	r3, .L25+4
 141 0072 0893     		str	r3, [sp, #32]
  93:Core/Src/adc.c ****   AnalogWDGConfig.WatchdogMode = ADC_ANALOGWATCHDOG_ALL_REG;
 142              		.loc 1 93 3 is_stmt 1 view .LVU49
 143              		.loc 1 93 32 is_stmt 0 view .LVU50
 144 0074 4FF40003 		mov	r3, #8388608
 145 0078 0993     		str	r3, [sp, #36]
  94:Core/Src/adc.c ****   AnalogWDGConfig.ITMode = ENABLE;
 146              		.loc 1 94 3 is_stmt 1 view .LVU51
 147              		.loc 1 94 26 is_stmt 0 view .LVU52
 148 007a 0123     		movs	r3, #1
 149 007c 8DF82C30 		strb	r3, [sp, #44]
  95:Core/Src/adc.c ****   AnalogWDGConfig.HighThreshold = 3102;
 150              		.loc 1 95 3 is_stmt 1 view .LVU53
 151              		.loc 1 95 33 is_stmt 0 view .LVU54
 152 0080 40F61E43 		movw	r3, #3102
 153 0084 0C93     		str	r3, [sp, #48]
  96:Core/Src/adc.c ****   AnalogWDGConfig.LowThreshold = 2481;
 154              		.loc 1 96 3 is_stmt 1 view .LVU55
 155              		.loc 1 96 32 is_stmt 0 view .LVU56
 156 0086 40F6B113 		movw	r3, #2481
 157 008a 0D93     		str	r3, [sp, #52]
  97:Core/Src/adc.c ****   AnalogWDGConfig.FilteringConfig = ADC_AWD_FILTERING_NONE;
 158              		.loc 1 97 3 is_stmt 1 view .LVU57
 159              		.loc 1 97 35 is_stmt 0 view .LVU58
 160 008c 0023     		movs	r3, #0
 161 008e 0E93     		str	r3, [sp, #56]
  98:Core/Src/adc.c ****   if (HAL_ADC_AnalogWDGConfig(&hadc1, &AnalogWDGConfig) != HAL_OK)
 162              		.loc 1 98 3 is_stmt 1 view .LVU59
 163              		.loc 1 98 7 is_stmt 0 view .LVU60
 164 0090 08A9     		add	r1, sp, #32
 165 0092 4048     		ldr	r0, .L25
 166 0094 FFF7FEFF 		bl	HAL_ADC_AnalogWDGConfig
 167              	.LVL3:
 168              		.loc 1 98 6 view .LVU61
 169 0098 0028     		cmp	r0, #0
 170 009a 5FD1     		bne	.L16
 171              	.L4:
  99:Core/Src/adc.c ****   {
 100:Core/Src/adc.c ****     Error_Handler();
 101:Core/Src/adc.c ****   }
 102:Core/Src/adc.c **** 
 103:Core/Src/adc.c ****   /** Configure Regular Channel
 104:Core/Src/adc.c ****   */
 105:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_6;
 172              		.loc 1 105 3 is_stmt 1 view .LVU62
 173              		.loc 1 105 19 is_stmt 0 view .LVU63
 174 009c 3F4B     		ldr	r3, .L25+8
 175 009e 0093     		str	r3, [sp]
 106:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 176              		.loc 1 106 3 is_stmt 1 view .LVU64
 177              		.loc 1 106 16 is_stmt 0 view .LVU65
 178 00a0 0623     		movs	r3, #6
 179 00a2 0193     		str	r3, [sp, #4]
 107:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
ARM GAS  C:\temp\ccmYnzEf.s 			page 6


 180              		.loc 1 107 3 is_stmt 1 view .LVU66
 181              		.loc 1 107 24 is_stmt 0 view .LVU67
 182 00a4 0023     		movs	r3, #0
 183 00a6 0293     		str	r3, [sp, #8]
 108:Core/Src/adc.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 184              		.loc 1 108 3 is_stmt 1 view .LVU68
 185              		.loc 1 108 22 is_stmt 0 view .LVU69
 186 00a8 7F22     		movs	r2, #127
 187 00aa 0392     		str	r2, [sp, #12]
 109:Core/Src/adc.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 188              		.loc 1 109 3 is_stmt 1 view .LVU70
 189              		.loc 1 109 24 is_stmt 0 view .LVU71
 190 00ac 0422     		movs	r2, #4
 191 00ae 0492     		str	r2, [sp, #16]
 110:Core/Src/adc.c ****   sConfig.Offset = 0;
 192              		.loc 1 110 3 is_stmt 1 view .LVU72
 193              		.loc 1 110 18 is_stmt 0 view .LVU73
 194 00b0 0593     		str	r3, [sp, #20]
 111:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 195              		.loc 1 111 3 is_stmt 1 view .LVU74
 196              		.loc 1 111 7 is_stmt 0 view .LVU75
 197 00b2 6946     		mov	r1, sp
 198 00b4 3748     		ldr	r0, .L25
 199 00b6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 200              	.LVL4:
 201              		.loc 1 111 6 view .LVU76
 202 00ba 0028     		cmp	r0, #0
 203 00bc 51D1     		bne	.L17
 204              	.L5:
 112:Core/Src/adc.c ****   {
 113:Core/Src/adc.c ****     Error_Handler();
 114:Core/Src/adc.c ****   }
 115:Core/Src/adc.c **** 
 116:Core/Src/adc.c ****   /** Configure Regular Channel
 117:Core/Src/adc.c ****   */
 118:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_7;
 205              		.loc 1 118 3 is_stmt 1 view .LVU77
 206              		.loc 1 118 19 is_stmt 0 view .LVU78
 207 00be 384B     		ldr	r3, .L25+12
 208 00c0 0093     		str	r3, [sp]
 119:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 209              		.loc 1 119 3 is_stmt 1 view .LVU79
 210              		.loc 1 119 16 is_stmt 0 view .LVU80
 211 00c2 0C23     		movs	r3, #12
 212 00c4 0193     		str	r3, [sp, #4]
 120:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 213              		.loc 1 120 3 is_stmt 1 view .LVU81
 214              		.loc 1 120 7 is_stmt 0 view .LVU82
 215 00c6 6946     		mov	r1, sp
 216 00c8 3248     		ldr	r0, .L25
 217 00ca FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 218              	.LVL5:
 219              		.loc 1 120 6 view .LVU83
 220 00ce 0028     		cmp	r0, #0
 221 00d0 4AD1     		bne	.L18
 222              	.L6:
 121:Core/Src/adc.c ****   {
ARM GAS  C:\temp\ccmYnzEf.s 			page 7


 122:Core/Src/adc.c ****     Error_Handler();
 123:Core/Src/adc.c ****   }
 124:Core/Src/adc.c **** 
 125:Core/Src/adc.c ****   /** Configure Regular Channel
 126:Core/Src/adc.c ****   */
 127:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_8;
 223              		.loc 1 127 3 is_stmt 1 view .LVU84
 224              		.loc 1 127 19 is_stmt 0 view .LVU85
 225 00d2 344B     		ldr	r3, .L25+16
 226 00d4 0093     		str	r3, [sp]
 128:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 227              		.loc 1 128 3 is_stmt 1 view .LVU86
 228              		.loc 1 128 16 is_stmt 0 view .LVU87
 229 00d6 1223     		movs	r3, #18
 230 00d8 0193     		str	r3, [sp, #4]
 129:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 231              		.loc 1 129 3 is_stmt 1 view .LVU88
 232              		.loc 1 129 7 is_stmt 0 view .LVU89
 233 00da 6946     		mov	r1, sp
 234 00dc 2D48     		ldr	r0, .L25
 235 00de FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 236              	.LVL6:
 237              		.loc 1 129 6 view .LVU90
 238 00e2 0028     		cmp	r0, #0
 239 00e4 43D1     		bne	.L19
 240              	.L7:
 130:Core/Src/adc.c ****   {
 131:Core/Src/adc.c ****     Error_Handler();
 132:Core/Src/adc.c ****   }
 133:Core/Src/adc.c **** 
 134:Core/Src/adc.c ****   /** Configure Regular Channel
 135:Core/Src/adc.c ****   */
 136:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_9;
 241              		.loc 1 136 3 is_stmt 1 view .LVU91
 242              		.loc 1 136 19 is_stmt 0 view .LVU92
 243 00e6 304B     		ldr	r3, .L25+20
 244 00e8 0093     		str	r3, [sp]
 137:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 245              		.loc 1 137 3 is_stmt 1 view .LVU93
 246              		.loc 1 137 16 is_stmt 0 view .LVU94
 247 00ea 1823     		movs	r3, #24
 248 00ec 0193     		str	r3, [sp, #4]
 138:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 249              		.loc 1 138 3 is_stmt 1 view .LVU95
 250              		.loc 1 138 7 is_stmt 0 view .LVU96
 251 00ee 6946     		mov	r1, sp
 252 00f0 2848     		ldr	r0, .L25
 253 00f2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 254              	.LVL7:
 255              		.loc 1 138 6 view .LVU97
 256 00f6 0028     		cmp	r0, #0
 257 00f8 3CD1     		bne	.L20
 258              	.L8:
 139:Core/Src/adc.c ****   {
 140:Core/Src/adc.c ****     Error_Handler();
 141:Core/Src/adc.c ****   }
 142:Core/Src/adc.c **** 
ARM GAS  C:\temp\ccmYnzEf.s 			page 8


 143:Core/Src/adc.c ****   /** Configure Regular Channel
 144:Core/Src/adc.c ****   */
 145:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 259              		.loc 1 145 3 is_stmt 1 view .LVU98
 260              		.loc 1 145 19 is_stmt 0 view .LVU99
 261 00fa 2C4B     		ldr	r3, .L25+24
 262 00fc 0093     		str	r3, [sp]
 146:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 263              		.loc 1 146 3 is_stmt 1 view .LVU100
 264              		.loc 1 146 16 is_stmt 0 view .LVU101
 265 00fe 4FF48073 		mov	r3, #256
 266 0102 0193     		str	r3, [sp, #4]
 147:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 267              		.loc 1 147 3 is_stmt 1 view .LVU102
 268              		.loc 1 147 7 is_stmt 0 view .LVU103
 269 0104 6946     		mov	r1, sp
 270 0106 2348     		ldr	r0, .L25
 271 0108 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 272              	.LVL8:
 273              		.loc 1 147 6 view .LVU104
 274 010c 0028     		cmp	r0, #0
 275 010e 34D1     		bne	.L21
 276              	.L9:
 148:Core/Src/adc.c ****   {
 149:Core/Src/adc.c ****     Error_Handler();
 150:Core/Src/adc.c ****   }
 151:Core/Src/adc.c **** 
 152:Core/Src/adc.c ****   /** Configure Regular Channel
 153:Core/Src/adc.c ****   */
 154:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_2;
 277              		.loc 1 154 3 is_stmt 1 view .LVU105
 278              		.loc 1 154 19 is_stmt 0 view .LVU106
 279 0110 274B     		ldr	r3, .L25+28
 280 0112 0093     		str	r3, [sp]
 155:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 281              		.loc 1 155 3 is_stmt 1 view .LVU107
 282              		.loc 1 155 16 is_stmt 0 view .LVU108
 283 0114 4FF48373 		mov	r3, #262
 284 0118 0193     		str	r3, [sp, #4]
 156:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 285              		.loc 1 156 3 is_stmt 1 view .LVU109
 286              		.loc 1 156 7 is_stmt 0 view .LVU110
 287 011a 6946     		mov	r1, sp
 288 011c 1D48     		ldr	r0, .L25
 289 011e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 290              	.LVL9:
 291              		.loc 1 156 6 view .LVU111
 292 0122 68BB     		cbnz	r0, .L22
 293              	.L10:
 157:Core/Src/adc.c ****   {
 158:Core/Src/adc.c ****     Error_Handler();
 159:Core/Src/adc.c ****   }
 160:Core/Src/adc.c **** 
 161:Core/Src/adc.c ****   /** Configure Regular Channel
 162:Core/Src/adc.c ****   */
 163:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_3;
 294              		.loc 1 163 3 is_stmt 1 view .LVU112
ARM GAS  C:\temp\ccmYnzEf.s 			page 9


 295              		.loc 1 163 19 is_stmt 0 view .LVU113
 296 0124 234B     		ldr	r3, .L25+32
 297 0126 0093     		str	r3, [sp]
 164:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 298              		.loc 1 164 3 is_stmt 1 view .LVU114
 299              		.loc 1 164 16 is_stmt 0 view .LVU115
 300 0128 4FF48673 		mov	r3, #268
 301 012c 0193     		str	r3, [sp, #4]
 165:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 302              		.loc 1 165 3 is_stmt 1 view .LVU116
 303              		.loc 1 165 7 is_stmt 0 view .LVU117
 304 012e 6946     		mov	r1, sp
 305 0130 1848     		ldr	r0, .L25
 306 0132 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 307              	.LVL10:
 308              		.loc 1 165 6 view .LVU118
 309 0136 30BB     		cbnz	r0, .L23
 310              	.L11:
 166:Core/Src/adc.c ****   {
 167:Core/Src/adc.c ****     Error_Handler();
 168:Core/Src/adc.c ****   }
 169:Core/Src/adc.c **** 
 170:Core/Src/adc.c ****   /** Configure Regular Channel
 171:Core/Src/adc.c ****   */
 172:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_4;
 311              		.loc 1 172 3 is_stmt 1 view .LVU119
 312              		.loc 1 172 19 is_stmt 0 view .LVU120
 313 0138 1F4B     		ldr	r3, .L25+36
 314 013a 0093     		str	r3, [sp]
 173:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 315              		.loc 1 173 3 is_stmt 1 view .LVU121
 316              		.loc 1 173 16 is_stmt 0 view .LVU122
 317 013c 4FF48973 		mov	r3, #274
 318 0140 0193     		str	r3, [sp, #4]
 174:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 319              		.loc 1 174 3 is_stmt 1 view .LVU123
 320              		.loc 1 174 7 is_stmt 0 view .LVU124
 321 0142 6946     		mov	r1, sp
 322 0144 1348     		ldr	r0, .L25
 323 0146 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 324              	.LVL11:
 325              		.loc 1 174 6 view .LVU125
 326 014a F8B9     		cbnz	r0, .L24
 327              	.L1:
 175:Core/Src/adc.c ****   {
 176:Core/Src/adc.c ****     Error_Handler();
 177:Core/Src/adc.c ****   }
 178:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 179:Core/Src/adc.c **** 
 180:Core/Src/adc.c **** 
 181:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
 182:Core/Src/adc.c **** 
 183:Core/Src/adc.c **** }
 328              		.loc 1 183 1 view .LVU126
 329 014c 12B0     		add	sp, sp, #72
 330              	.LCFI2:
 331              		.cfi_remember_state
ARM GAS  C:\temp\ccmYnzEf.s 			page 10


 332              		.cfi_def_cfa_offset 8
 333              		@ sp needed
 334 014e 10BD     		pop	{r4, pc}
 335              	.L14:
 336              	.LCFI3:
 337              		.cfi_restore_state
  79:Core/Src/adc.c ****   }
 338              		.loc 1 79 5 is_stmt 1 view .LVU127
 339 0150 FFF7FEFF 		bl	Error_Handler
 340              	.LVL12:
 341 0154 84E7     		b	.L2
 342              	.L15:
  87:Core/Src/adc.c ****   }
 343              		.loc 1 87 5 view .LVU128
 344 0156 FFF7FEFF 		bl	Error_Handler
 345              	.LVL13:
 346 015a 89E7     		b	.L3
 347              	.L16:
 100:Core/Src/adc.c ****   }
 348              		.loc 1 100 5 view .LVU129
 349 015c FFF7FEFF 		bl	Error_Handler
 350              	.LVL14:
 351 0160 9CE7     		b	.L4
 352              	.L17:
 113:Core/Src/adc.c ****   }
 353              		.loc 1 113 5 view .LVU130
 354 0162 FFF7FEFF 		bl	Error_Handler
 355              	.LVL15:
 356 0166 AAE7     		b	.L5
 357              	.L18:
 122:Core/Src/adc.c ****   }
 358              		.loc 1 122 5 view .LVU131
 359 0168 FFF7FEFF 		bl	Error_Handler
 360              	.LVL16:
 361 016c B1E7     		b	.L6
 362              	.L19:
 131:Core/Src/adc.c ****   }
 363              		.loc 1 131 5 view .LVU132
 364 016e FFF7FEFF 		bl	Error_Handler
 365              	.LVL17:
 366 0172 B8E7     		b	.L7
 367              	.L20:
 140:Core/Src/adc.c ****   }
 368              		.loc 1 140 5 view .LVU133
 369 0174 FFF7FEFF 		bl	Error_Handler
 370              	.LVL18:
 371 0178 BFE7     		b	.L8
 372              	.L21:
 149:Core/Src/adc.c ****   }
 373              		.loc 1 149 5 view .LVU134
 374 017a FFF7FEFF 		bl	Error_Handler
 375              	.LVL19:
 376 017e C7E7     		b	.L9
 377              	.L22:
 158:Core/Src/adc.c ****   }
 378              		.loc 1 158 5 view .LVU135
 379 0180 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\temp\ccmYnzEf.s 			page 11


 380              	.LVL20:
 381 0184 CEE7     		b	.L10
 382              	.L23:
 167:Core/Src/adc.c ****   }
 383              		.loc 1 167 5 view .LVU136
 384 0186 FFF7FEFF 		bl	Error_Handler
 385              	.LVL21:
 386 018a D5E7     		b	.L11
 387              	.L24:
 176:Core/Src/adc.c ****   }
 388              		.loc 1 176 5 view .LVU137
 389 018c FFF7FEFF 		bl	Error_Handler
 390              	.LVL22:
 391              		.loc 1 183 1 is_stmt 0 view .LVU138
 392 0190 DCE7     		b	.L1
 393              	.L26:
 394 0192 00BF     		.align	2
 395              	.L25:
 396 0194 00000000 		.word	.LANCHOR0
 397 0198 0000C07D 		.word	2109734912
 398 019c 40002019 		.word	421527616
 399 01a0 8000501D 		.word	491782272
 400 01a4 00018021 		.word	562036992
 401 01a8 0002B025 		.word	632291840
 402 01ac 02003004 		.word	70254594
 403 01b0 04006008 		.word	140509188
 404 01b4 0800900C 		.word	210763784
 405 01b8 1000C010 		.word	281018384
 406              		.cfi_endproc
 407              	.LFE332:
 409              		.section	.text.MX_ADC2_Init,"ax",%progbits
 410              		.align	1
 411              		.global	MX_ADC2_Init
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 416              	MX_ADC2_Init:
 417              	.LFB333:
 184:Core/Src/adc.c **** /* ADC2 init function */
 185:Core/Src/adc.c **** void MX_ADC2_Init(void)
 186:Core/Src/adc.c **** {
 418              		.loc 1 186 1 is_stmt 1 view -0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 64
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422 0000 10B5     		push	{r4, lr}
 423              	.LCFI4:
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 4, -8
 426              		.cfi_offset 14, -4
 427 0002 90B0     		sub	sp, sp, #64
 428              	.LCFI5:
 429              		.cfi_def_cfa_offset 72
 187:Core/Src/adc.c **** 
 188:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_Init 0 */
 189:Core/Src/adc.c **** 
 190:Core/Src/adc.c ****   /* USER CODE END ADC2_Init 0 */
ARM GAS  C:\temp\ccmYnzEf.s 			page 12


 191:Core/Src/adc.c **** 
 192:Core/Src/adc.c ****   ADC_AnalogWDGConfTypeDef AnalogWDGConfig = {0};
 430              		.loc 1 192 3 view .LVU140
 431              		.loc 1 192 28 is_stmt 0 view .LVU141
 432 0004 0024     		movs	r4, #0
 433 0006 0994     		str	r4, [sp, #36]
 434 0008 0A94     		str	r4, [sp, #40]
 435 000a 0B94     		str	r4, [sp, #44]
 436 000c 0C94     		str	r4, [sp, #48]
 437 000e 0D94     		str	r4, [sp, #52]
 438 0010 0E94     		str	r4, [sp, #56]
 439 0012 0F94     		str	r4, [sp, #60]
 193:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 440              		.loc 1 193 3 is_stmt 1 view .LVU142
 441              		.loc 1 193 26 is_stmt 0 view .LVU143
 442 0014 2022     		movs	r2, #32
 443 0016 2146     		mov	r1, r4
 444 0018 01A8     		add	r0, sp, #4
 445 001a FFF7FEFF 		bl	memset
 446              	.LVL23:
 194:Core/Src/adc.c **** 
 195:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_Init 1 */
 196:Core/Src/adc.c **** 
 197:Core/Src/adc.c ****   /* USER CODE END ADC2_Init 1 */
 198:Core/Src/adc.c **** 
 199:Core/Src/adc.c ****   /** Common config
 200:Core/Src/adc.c ****   */
 201:Core/Src/adc.c ****   hadc2.Instance = ADC2;
 447              		.loc 1 201 3 is_stmt 1 view .LVU144
 448              		.loc 1 201 18 is_stmt 0 view .LVU145
 449 001e 4848     		ldr	r0, .L45
 450 0020 484B     		ldr	r3, .L45+4
 451 0022 0360     		str	r3, [r0]
 202:Core/Src/adc.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 452              		.loc 1 202 3 is_stmt 1 view .LVU146
 453              		.loc 1 202 29 is_stmt 0 view .LVU147
 454 0024 4FF44033 		mov	r3, #196608
 455 0028 4360     		str	r3, [r0, #4]
 203:Core/Src/adc.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 456              		.loc 1 203 3 is_stmt 1 view .LVU148
 457              		.loc 1 203 25 is_stmt 0 view .LVU149
 458 002a 8460     		str	r4, [r0, #8]
 204:Core/Src/adc.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 459              		.loc 1 204 3 is_stmt 1 view .LVU150
 460              		.loc 1 204 24 is_stmt 0 view .LVU151
 461 002c C460     		str	r4, [r0, #12]
 205:Core/Src/adc.c ****   hadc2.Init.GainCompensation = 0;
 462              		.loc 1 205 3 is_stmt 1 view .LVU152
 463              		.loc 1 205 31 is_stmt 0 view .LVU153
 464 002e 0461     		str	r4, [r0, #16]
 206:Core/Src/adc.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 465              		.loc 1 206 3 is_stmt 1 view .LVU154
 466              		.loc 1 206 27 is_stmt 0 view .LVU155
 467 0030 0123     		movs	r3, #1
 468 0032 4361     		str	r3, [r0, #20]
 207:Core/Src/adc.c ****   hadc2.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 469              		.loc 1 207 3 is_stmt 1 view .LVU156
ARM GAS  C:\temp\ccmYnzEf.s 			page 13


 470              		.loc 1 207 27 is_stmt 0 view .LVU157
 471 0034 0822     		movs	r2, #8
 472 0036 8261     		str	r2, [r0, #24]
 208:Core/Src/adc.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 473              		.loc 1 208 3 is_stmt 1 view .LVU158
 474              		.loc 1 208 31 is_stmt 0 view .LVU159
 475 0038 0477     		strb	r4, [r0, #28]
 209:Core/Src/adc.c ****   hadc2.Init.ContinuousConvMode = ENABLE;
 476              		.loc 1 209 3 is_stmt 1 view .LVU160
 477              		.loc 1 209 33 is_stmt 0 view .LVU161
 478 003a 4377     		strb	r3, [r0, #29]
 210:Core/Src/adc.c ****   hadc2.Init.NbrOfConversion = 6;
 479              		.loc 1 210 3 is_stmt 1 view .LVU162
 480              		.loc 1 210 30 is_stmt 0 view .LVU163
 481 003c 0622     		movs	r2, #6
 482 003e 0262     		str	r2, [r0, #32]
 211:Core/Src/adc.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 483              		.loc 1 211 3 is_stmt 1 view .LVU164
 484              		.loc 1 211 36 is_stmt 0 view .LVU165
 485 0040 80F82440 		strb	r4, [r0, #36]
 212:Core/Src/adc.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 486              		.loc 1 212 3 is_stmt 1 view .LVU166
 487              		.loc 1 212 31 is_stmt 0 view .LVU167
 488 0044 C462     		str	r4, [r0, #44]
 213:Core/Src/adc.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 489              		.loc 1 213 3 is_stmt 1 view .LVU168
 490              		.loc 1 213 35 is_stmt 0 view .LVU169
 491 0046 0463     		str	r4, [r0, #48]
 214:Core/Src/adc.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 492              		.loc 1 214 3 is_stmt 1 view .LVU170
 493              		.loc 1 214 36 is_stmt 0 view .LVU171
 494 0048 80F83830 		strb	r3, [r0, #56]
 215:Core/Src/adc.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 495              		.loc 1 215 3 is_stmt 1 view .LVU172
 496              		.loc 1 215 22 is_stmt 0 view .LVU173
 497 004c C463     		str	r4, [r0, #60]
 216:Core/Src/adc.c ****   hadc2.Init.OversamplingMode = DISABLE;
 498              		.loc 1 216 3 is_stmt 1 view .LVU174
 499              		.loc 1 216 31 is_stmt 0 view .LVU175
 500 004e 80F84040 		strb	r4, [r0, #64]
 217:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 501              		.loc 1 217 3 is_stmt 1 view .LVU176
 502              		.loc 1 217 7 is_stmt 0 view .LVU177
 503 0052 FFF7FEFF 		bl	HAL_ADC_Init
 504              	.LVL24:
 505              		.loc 1 217 6 view .LVU178
 506 0056 0028     		cmp	r0, #0
 507 0058 59D1     		bne	.L37
 508              	.L28:
 218:Core/Src/adc.c ****   {
 219:Core/Src/adc.c ****     Error_Handler();
 220:Core/Src/adc.c ****   }
 221:Core/Src/adc.c **** 
 222:Core/Src/adc.c ****   /** Configure Analog WatchDog 1
 223:Core/Src/adc.c ****   */
 224:Core/Src/adc.c ****   AnalogWDGConfig.WatchdogNumber = ADC_ANALOGWATCHDOG_1;
 509              		.loc 1 224 3 is_stmt 1 view .LVU179
ARM GAS  C:\temp\ccmYnzEf.s 			page 14


 510              		.loc 1 224 34 is_stmt 0 view .LVU180
 511 005a 3B4B     		ldr	r3, .L45+8
 512 005c 0993     		str	r3, [sp, #36]
 225:Core/Src/adc.c ****   AnalogWDGConfig.WatchdogMode = ADC_ANALOGWATCHDOG_ALL_REG;
 513              		.loc 1 225 3 is_stmt 1 view .LVU181
 514              		.loc 1 225 32 is_stmt 0 view .LVU182
 515 005e 4FF40003 		mov	r3, #8388608
 516 0062 0A93     		str	r3, [sp, #40]
 226:Core/Src/adc.c ****   AnalogWDGConfig.ITMode = ENABLE;
 517              		.loc 1 226 3 is_stmt 1 view .LVU183
 518              		.loc 1 226 26 is_stmt 0 view .LVU184
 519 0064 0123     		movs	r3, #1
 520 0066 8DF83030 		strb	r3, [sp, #48]
 227:Core/Src/adc.c ****   AnalogWDGConfig.HighThreshold = 3000;
 521              		.loc 1 227 3 is_stmt 1 view .LVU185
 522              		.loc 1 227 33 is_stmt 0 view .LVU186
 523 006a 40F6B833 		movw	r3, #3000
 524 006e 0D93     		str	r3, [sp, #52]
 228:Core/Src/adc.c ****   AnalogWDGConfig.LowThreshold = 2000;
 525              		.loc 1 228 3 is_stmt 1 view .LVU187
 526              		.loc 1 228 32 is_stmt 0 view .LVU188
 527 0070 4FF4FA63 		mov	r3, #2000
 528 0074 0E93     		str	r3, [sp, #56]
 229:Core/Src/adc.c ****   AnalogWDGConfig.FilteringConfig = ADC_AWD_FILTERING_NONE;
 529              		.loc 1 229 3 is_stmt 1 view .LVU189
 530              		.loc 1 229 35 is_stmt 0 view .LVU190
 531 0076 0023     		movs	r3, #0
 532 0078 0F93     		str	r3, [sp, #60]
 230:Core/Src/adc.c ****   if (HAL_ADC_AnalogWDGConfig(&hadc2, &AnalogWDGConfig) != HAL_OK)
 533              		.loc 1 230 3 is_stmt 1 view .LVU191
 534              		.loc 1 230 7 is_stmt 0 view .LVU192
 535 007a 09A9     		add	r1, sp, #36
 536 007c 3048     		ldr	r0, .L45
 537 007e FFF7FEFF 		bl	HAL_ADC_AnalogWDGConfig
 538              	.LVL25:
 539              		.loc 1 230 6 view .LVU193
 540 0082 0028     		cmp	r0, #0
 541 0084 46D1     		bne	.L38
 542              	.L29:
 231:Core/Src/adc.c ****   {
 232:Core/Src/adc.c ****     Error_Handler();
 233:Core/Src/adc.c ****   }
 234:Core/Src/adc.c **** 
 235:Core/Src/adc.c ****   /** Configure Regular Channel
 236:Core/Src/adc.c ****   */
 237:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_17;
 543              		.loc 1 237 3 is_stmt 1 view .LVU194
 544              		.loc 1 237 19 is_stmt 0 view .LVU195
 545 0086 314B     		ldr	r3, .L45+12
 546 0088 0193     		str	r3, [sp, #4]
 238:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 547              		.loc 1 238 3 is_stmt 1 view .LVU196
 548              		.loc 1 238 16 is_stmt 0 view .LVU197
 549 008a 0623     		movs	r3, #6
 550 008c 0293     		str	r3, [sp, #8]
 239:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 551              		.loc 1 239 3 is_stmt 1 view .LVU198
ARM GAS  C:\temp\ccmYnzEf.s 			page 15


 552              		.loc 1 239 24 is_stmt 0 view .LVU199
 553 008e 0023     		movs	r3, #0
 554 0090 0393     		str	r3, [sp, #12]
 240:Core/Src/adc.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 555              		.loc 1 240 3 is_stmt 1 view .LVU200
 556              		.loc 1 240 22 is_stmt 0 view .LVU201
 557 0092 7F22     		movs	r2, #127
 558 0094 0492     		str	r2, [sp, #16]
 241:Core/Src/adc.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 559              		.loc 1 241 3 is_stmt 1 view .LVU202
 560              		.loc 1 241 24 is_stmt 0 view .LVU203
 561 0096 0422     		movs	r2, #4
 562 0098 0592     		str	r2, [sp, #20]
 242:Core/Src/adc.c ****   sConfig.Offset = 0;
 563              		.loc 1 242 3 is_stmt 1 view .LVU204
 564              		.loc 1 242 18 is_stmt 0 view .LVU205
 565 009a 0693     		str	r3, [sp, #24]
 243:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 566              		.loc 1 243 3 is_stmt 1 view .LVU206
 567              		.loc 1 243 7 is_stmt 0 view .LVU207
 568 009c 0DEB0201 		add	r1, sp, r2
 569 00a0 2748     		ldr	r0, .L45
 570 00a2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 571              	.LVL26:
 572              		.loc 1 243 6 view .LVU208
 573 00a6 0028     		cmp	r0, #0
 574 00a8 37D1     		bne	.L39
 575              	.L30:
 244:Core/Src/adc.c ****   {
 245:Core/Src/adc.c ****     Error_Handler();
 246:Core/Src/adc.c ****   }
 247:Core/Src/adc.c **** 
 248:Core/Src/adc.c ****   /** Configure Regular Channel
 249:Core/Src/adc.c ****   */
 250:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_13;
 576              		.loc 1 250 3 is_stmt 1 view .LVU209
 577              		.loc 1 250 19 is_stmt 0 view .LVU210
 578 00aa 294B     		ldr	r3, .L45+16
 579 00ac 0193     		str	r3, [sp, #4]
 251:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 580              		.loc 1 251 3 is_stmt 1 view .LVU211
 581              		.loc 1 251 16 is_stmt 0 view .LVU212
 582 00ae 0C23     		movs	r3, #12
 583 00b0 0293     		str	r3, [sp, #8]
 252:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 584              		.loc 1 252 3 is_stmt 1 view .LVU213
 585              		.loc 1 252 7 is_stmt 0 view .LVU214
 586 00b2 01A9     		add	r1, sp, #4
 587 00b4 2248     		ldr	r0, .L45
 588 00b6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 589              	.LVL27:
 590              		.loc 1 252 6 view .LVU215
 591 00ba 0028     		cmp	r0, #0
 592 00bc 30D1     		bne	.L40
 593              	.L31:
 253:Core/Src/adc.c ****   {
 254:Core/Src/adc.c ****     Error_Handler();
ARM GAS  C:\temp\ccmYnzEf.s 			page 16


 255:Core/Src/adc.c ****   }
 256:Core/Src/adc.c **** 
 257:Core/Src/adc.c ****   /** Configure Regular Channel
 258:Core/Src/adc.c ****   */
 259:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_3;
 594              		.loc 1 259 3 is_stmt 1 view .LVU216
 595              		.loc 1 259 19 is_stmt 0 view .LVU217
 596 00be 254B     		ldr	r3, .L45+20
 597 00c0 0193     		str	r3, [sp, #4]
 260:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 598              		.loc 1 260 3 is_stmt 1 view .LVU218
 599              		.loc 1 260 16 is_stmt 0 view .LVU219
 600 00c2 1223     		movs	r3, #18
 601 00c4 0293     		str	r3, [sp, #8]
 261:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 602              		.loc 1 261 3 is_stmt 1 view .LVU220
 603              		.loc 1 261 7 is_stmt 0 view .LVU221
 604 00c6 01A9     		add	r1, sp, #4
 605 00c8 1D48     		ldr	r0, .L45
 606 00ca FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 607              	.LVL28:
 608              		.loc 1 261 6 view .LVU222
 609 00ce 50BB     		cbnz	r0, .L41
 610              	.L32:
 262:Core/Src/adc.c ****   {
 263:Core/Src/adc.c ****     Error_Handler();
 264:Core/Src/adc.c ****   }
 265:Core/Src/adc.c **** 
 266:Core/Src/adc.c ****   /** Configure Regular Channel
 267:Core/Src/adc.c ****   */
 268:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_4;
 611              		.loc 1 268 3 is_stmt 1 view .LVU223
 612              		.loc 1 268 19 is_stmt 0 view .LVU224
 613 00d0 214B     		ldr	r3, .L45+24
 614 00d2 0193     		str	r3, [sp, #4]
 269:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 615              		.loc 1 269 3 is_stmt 1 view .LVU225
 616              		.loc 1 269 16 is_stmt 0 view .LVU226
 617 00d4 1823     		movs	r3, #24
 618 00d6 0293     		str	r3, [sp, #8]
 270:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 619              		.loc 1 270 3 is_stmt 1 view .LVU227
 620              		.loc 1 270 7 is_stmt 0 view .LVU228
 621 00d8 01A9     		add	r1, sp, #4
 622 00da 1948     		ldr	r0, .L45
 623 00dc FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 624              	.LVL29:
 625              		.loc 1 270 6 view .LVU229
 626 00e0 20BB     		cbnz	r0, .L42
 627              	.L33:
 271:Core/Src/adc.c ****   {
 272:Core/Src/adc.c ****     Error_Handler();
 273:Core/Src/adc.c ****   }
 274:Core/Src/adc.c **** 
 275:Core/Src/adc.c ****   /** Configure Regular Channel
 276:Core/Src/adc.c ****   */
 277:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_5;
ARM GAS  C:\temp\ccmYnzEf.s 			page 17


 628              		.loc 1 277 3 is_stmt 1 view .LVU230
 629              		.loc 1 277 19 is_stmt 0 view .LVU231
 630 00e2 1E4B     		ldr	r3, .L45+28
 631 00e4 0193     		str	r3, [sp, #4]
 278:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 632              		.loc 1 278 3 is_stmt 1 view .LVU232
 633              		.loc 1 278 16 is_stmt 0 view .LVU233
 634 00e6 4FF48073 		mov	r3, #256
 635 00ea 0293     		str	r3, [sp, #8]
 279:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 636              		.loc 1 279 3 is_stmt 1 view .LVU234
 637              		.loc 1 279 7 is_stmt 0 view .LVU235
 638 00ec 01A9     		add	r1, sp, #4
 639 00ee 1448     		ldr	r0, .L45
 640 00f0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 641              	.LVL30:
 642              		.loc 1 279 6 view .LVU236
 643 00f4 E8B9     		cbnz	r0, .L43
 644              	.L34:
 280:Core/Src/adc.c ****   {
 281:Core/Src/adc.c ****     Error_Handler();
 282:Core/Src/adc.c ****   }
 283:Core/Src/adc.c **** 
 284:Core/Src/adc.c ****   /** Configure Regular Channel
 285:Core/Src/adc.c ****   */
 286:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_11;
 645              		.loc 1 286 3 is_stmt 1 view .LVU237
 646              		.loc 1 286 19 is_stmt 0 view .LVU238
 647 00f6 1A4B     		ldr	r3, .L45+32
 648 00f8 0193     		str	r3, [sp, #4]
 287:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 649              		.loc 1 287 3 is_stmt 1 view .LVU239
 650              		.loc 1 287 16 is_stmt 0 view .LVU240
 651 00fa 4FF48373 		mov	r3, #262
 652 00fe 0293     		str	r3, [sp, #8]
 288:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 653              		.loc 1 288 3 is_stmt 1 view .LVU241
 654              		.loc 1 288 7 is_stmt 0 view .LVU242
 655 0100 01A9     		add	r1, sp, #4
 656 0102 0F48     		ldr	r0, .L45
 657 0104 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 658              	.LVL31:
 659              		.loc 1 288 6 view .LVU243
 660 0108 B0B9     		cbnz	r0, .L44
 661              	.L27:
 289:Core/Src/adc.c ****   {
 290:Core/Src/adc.c ****     Error_Handler();
 291:Core/Src/adc.c ****   }
 292:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 293:Core/Src/adc.c **** 
 294:Core/Src/adc.c ****   /* USER CODE END ADC2_Init 2 */
 295:Core/Src/adc.c **** 
 296:Core/Src/adc.c **** }
 662              		.loc 1 296 1 view .LVU244
 663 010a 10B0     		add	sp, sp, #64
 664              	.LCFI6:
 665              		.cfi_remember_state
ARM GAS  C:\temp\ccmYnzEf.s 			page 18


 666              		.cfi_def_cfa_offset 8
 667              		@ sp needed
 668 010c 10BD     		pop	{r4, pc}
 669              	.L37:
 670              	.LCFI7:
 671              		.cfi_restore_state
 219:Core/Src/adc.c ****   }
 672              		.loc 1 219 5 is_stmt 1 view .LVU245
 673 010e FFF7FEFF 		bl	Error_Handler
 674              	.LVL32:
 675 0112 A2E7     		b	.L28
 676              	.L38:
 232:Core/Src/adc.c ****   }
 677              		.loc 1 232 5 view .LVU246
 678 0114 FFF7FEFF 		bl	Error_Handler
 679              	.LVL33:
 680 0118 B5E7     		b	.L29
 681              	.L39:
 245:Core/Src/adc.c ****   }
 682              		.loc 1 245 5 view .LVU247
 683 011a FFF7FEFF 		bl	Error_Handler
 684              	.LVL34:
 685 011e C4E7     		b	.L30
 686              	.L40:
 254:Core/Src/adc.c ****   }
 687              		.loc 1 254 5 view .LVU248
 688 0120 FFF7FEFF 		bl	Error_Handler
 689              	.LVL35:
 690 0124 CBE7     		b	.L31
 691              	.L41:
 263:Core/Src/adc.c ****   }
 692              		.loc 1 263 5 view .LVU249
 693 0126 FFF7FEFF 		bl	Error_Handler
 694              	.LVL36:
 695 012a D1E7     		b	.L32
 696              	.L42:
 272:Core/Src/adc.c ****   }
 697              		.loc 1 272 5 view .LVU250
 698 012c FFF7FEFF 		bl	Error_Handler
 699              	.LVL37:
 700 0130 D7E7     		b	.L33
 701              	.L43:
 281:Core/Src/adc.c ****   }
 702              		.loc 1 281 5 view .LVU251
 703 0132 FFF7FEFF 		bl	Error_Handler
 704              	.LVL38:
 705 0136 DEE7     		b	.L34
 706              	.L44:
 290:Core/Src/adc.c ****   }
 707              		.loc 1 290 5 view .LVU252
 708 0138 FFF7FEFF 		bl	Error_Handler
 709              	.LVL39:
 710              		.loc 1 296 1 is_stmt 0 view .LVU253
 711 013c E5E7     		b	.L27
 712              	.L46:
 713 013e 00BF     		.align	2
 714              	.L45:
ARM GAS  C:\temp\ccmYnzEf.s 			page 19


 715 0140 00000000 		.word	.LANCHOR1
 716 0144 00010050 		.word	1342177536
 717 0148 0000C07D 		.word	2109734912
 718 014c 00005247 		.word	1196556288
 719 0150 00209036 		.word	915415040
 720 0154 0800900C 		.word	210763784
 721 0158 1000C010 		.word	281018384
 722 015c 2000F014 		.word	351272992
 723 0160 0008302E 		.word	774899712
 724              		.cfi_endproc
 725              	.LFE333:
 727              		.section	.text.MX_ADC3_Init,"ax",%progbits
 728              		.align	1
 729              		.global	MX_ADC3_Init
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 734              	MX_ADC3_Init:
 735              	.LFB334:
 297:Core/Src/adc.c **** /* ADC3 init function */
 298:Core/Src/adc.c **** void MX_ADC3_Init(void)
 299:Core/Src/adc.c **** {
 736              		.loc 1 299 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 48
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740 0000 10B5     		push	{r4, lr}
 741              	.LCFI8:
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 4, -8
 744              		.cfi_offset 14, -4
 745 0002 8CB0     		sub	sp, sp, #48
 746              	.LCFI9:
 747              		.cfi_def_cfa_offset 56
 300:Core/Src/adc.c **** 
 301:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 0 */
 302:Core/Src/adc.c **** 
 303:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 0 */
 304:Core/Src/adc.c **** 
 305:Core/Src/adc.c ****   ADC_MultiModeTypeDef multimode = {0};
 748              		.loc 1 305 3 view .LVU255
 749              		.loc 1 305 24 is_stmt 0 view .LVU256
 750 0004 0024     		movs	r4, #0
 751 0006 0994     		str	r4, [sp, #36]
 752 0008 0A94     		str	r4, [sp, #40]
 753 000a 0B94     		str	r4, [sp, #44]
 306:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 754              		.loc 1 306 3 is_stmt 1 view .LVU257
 755              		.loc 1 306 26 is_stmt 0 view .LVU258
 756 000c 2022     		movs	r2, #32
 757 000e 2146     		mov	r1, r4
 758 0010 01A8     		add	r0, sp, #4
 759 0012 FFF7FEFF 		bl	memset
 760              	.LVL40:
 307:Core/Src/adc.c **** 
 308:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 1 */
 309:Core/Src/adc.c **** 
ARM GAS  C:\temp\ccmYnzEf.s 			page 20


 310:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 1 */
 311:Core/Src/adc.c **** 
 312:Core/Src/adc.c ****   /** Common config
 313:Core/Src/adc.c ****   */
 314:Core/Src/adc.c ****   hadc3.Instance = ADC3;
 761              		.loc 1 314 3 is_stmt 1 view .LVU259
 762              		.loc 1 314 18 is_stmt 0 view .LVU260
 763 0016 2648     		ldr	r0, .L57
 764 0018 264B     		ldr	r3, .L57+4
 765 001a 0360     		str	r3, [r0]
 315:Core/Src/adc.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 766              		.loc 1 315 3 is_stmt 1 view .LVU261
 767              		.loc 1 315 29 is_stmt 0 view .LVU262
 768 001c 4FF44033 		mov	r3, #196608
 769 0020 4360     		str	r3, [r0, #4]
 316:Core/Src/adc.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 770              		.loc 1 316 3 is_stmt 1 view .LVU263
 771              		.loc 1 316 25 is_stmt 0 view .LVU264
 772 0022 8460     		str	r4, [r0, #8]
 317:Core/Src/adc.c ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 773              		.loc 1 317 3 is_stmt 1 view .LVU265
 774              		.loc 1 317 24 is_stmt 0 view .LVU266
 775 0024 C460     		str	r4, [r0, #12]
 318:Core/Src/adc.c ****   hadc3.Init.GainCompensation = 0;
 776              		.loc 1 318 3 is_stmt 1 view .LVU267
 777              		.loc 1 318 31 is_stmt 0 view .LVU268
 778 0026 0461     		str	r4, [r0, #16]
 319:Core/Src/adc.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 779              		.loc 1 319 3 is_stmt 1 view .LVU269
 780              		.loc 1 319 27 is_stmt 0 view .LVU270
 781 0028 0123     		movs	r3, #1
 782 002a 4361     		str	r3, [r0, #20]
 320:Core/Src/adc.c ****   hadc3.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 783              		.loc 1 320 3 is_stmt 1 view .LVU271
 784              		.loc 1 320 27 is_stmt 0 view .LVU272
 785 002c 0822     		movs	r2, #8
 786 002e 8261     		str	r2, [r0, #24]
 321:Core/Src/adc.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 787              		.loc 1 321 3 is_stmt 1 view .LVU273
 788              		.loc 1 321 31 is_stmt 0 view .LVU274
 789 0030 0477     		strb	r4, [r0, #28]
 322:Core/Src/adc.c ****   hadc3.Init.ContinuousConvMode = ENABLE;
 790              		.loc 1 322 3 is_stmt 1 view .LVU275
 791              		.loc 1 322 33 is_stmt 0 view .LVU276
 792 0032 4377     		strb	r3, [r0, #29]
 323:Core/Src/adc.c ****   hadc3.Init.NbrOfConversion = 2;
 793              		.loc 1 323 3 is_stmt 1 view .LVU277
 794              		.loc 1 323 30 is_stmt 0 view .LVU278
 795 0034 0223     		movs	r3, #2
 796 0036 0362     		str	r3, [r0, #32]
 324:Core/Src/adc.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 797              		.loc 1 324 3 is_stmt 1 view .LVU279
 798              		.loc 1 324 36 is_stmt 0 view .LVU280
 799 0038 80F82440 		strb	r4, [r0, #36]
 325:Core/Src/adc.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800              		.loc 1 325 3 is_stmt 1 view .LVU281
 801              		.loc 1 325 31 is_stmt 0 view .LVU282
ARM GAS  C:\temp\ccmYnzEf.s 			page 21


 802 003c C462     		str	r4, [r0, #44]
 326:Core/Src/adc.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 803              		.loc 1 326 3 is_stmt 1 view .LVU283
 804              		.loc 1 326 35 is_stmt 0 view .LVU284
 805 003e 0463     		str	r4, [r0, #48]
 327:Core/Src/adc.c ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 806              		.loc 1 327 3 is_stmt 1 view .LVU285
 807              		.loc 1 327 36 is_stmt 0 view .LVU286
 808 0040 80F83840 		strb	r4, [r0, #56]
 328:Core/Src/adc.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 809              		.loc 1 328 3 is_stmt 1 view .LVU287
 810              		.loc 1 328 22 is_stmt 0 view .LVU288
 811 0044 C463     		str	r4, [r0, #60]
 329:Core/Src/adc.c ****   hadc3.Init.OversamplingMode = DISABLE;
 812              		.loc 1 329 3 is_stmt 1 view .LVU289
 813              		.loc 1 329 31 is_stmt 0 view .LVU290
 814 0046 80F84040 		strb	r4, [r0, #64]
 330:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 815              		.loc 1 330 3 is_stmt 1 view .LVU291
 816              		.loc 1 330 7 is_stmt 0 view .LVU292
 817 004a FFF7FEFF 		bl	HAL_ADC_Init
 818              	.LVL41:
 819              		.loc 1 330 6 view .LVU293
 820 004e 10BB     		cbnz	r0, .L53
 821              	.L48:
 331:Core/Src/adc.c ****   {
 332:Core/Src/adc.c ****     Error_Handler();
 333:Core/Src/adc.c ****   }
 334:Core/Src/adc.c **** 
 335:Core/Src/adc.c ****   /** Configure the ADC multi-mode
 336:Core/Src/adc.c ****   */
 337:Core/Src/adc.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 822              		.loc 1 337 3 is_stmt 1 view .LVU294
 823              		.loc 1 337 18 is_stmt 0 view .LVU295
 824 0050 0023     		movs	r3, #0
 825 0052 0993     		str	r3, [sp, #36]
 338:Core/Src/adc.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc3, &multimode) != HAL_OK)
 826              		.loc 1 338 3 is_stmt 1 view .LVU296
 827              		.loc 1 338 7 is_stmt 0 view .LVU297
 828 0054 09A9     		add	r1, sp, #36
 829 0056 1648     		ldr	r0, .L57
 830 0058 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 831              	.LVL42:
 832              		.loc 1 338 6 view .LVU298
 833 005c F0B9     		cbnz	r0, .L54
 834              	.L49:
 339:Core/Src/adc.c ****   {
 340:Core/Src/adc.c ****     Error_Handler();
 341:Core/Src/adc.c ****   }
 342:Core/Src/adc.c **** 
 343:Core/Src/adc.c ****   /** Configure Regular Channel
 344:Core/Src/adc.c ****   */
 345:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_12;
 835              		.loc 1 345 3 is_stmt 1 view .LVU299
 836              		.loc 1 345 19 is_stmt 0 view .LVU300
 837 005e 164B     		ldr	r3, .L57+8
 838 0060 0193     		str	r3, [sp, #4]
ARM GAS  C:\temp\ccmYnzEf.s 			page 22


 346:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 839              		.loc 1 346 3 is_stmt 1 view .LVU301
 840              		.loc 1 346 16 is_stmt 0 view .LVU302
 841 0062 0623     		movs	r3, #6
 842 0064 0293     		str	r3, [sp, #8]
 347:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 843              		.loc 1 347 3 is_stmt 1 view .LVU303
 844              		.loc 1 347 24 is_stmt 0 view .LVU304
 845 0066 0023     		movs	r3, #0
 846 0068 0393     		str	r3, [sp, #12]
 348:Core/Src/adc.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 847              		.loc 1 348 3 is_stmt 1 view .LVU305
 848              		.loc 1 348 22 is_stmt 0 view .LVU306
 849 006a 7F22     		movs	r2, #127
 850 006c 0492     		str	r2, [sp, #16]
 349:Core/Src/adc.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 851              		.loc 1 349 3 is_stmt 1 view .LVU307
 852              		.loc 1 349 24 is_stmt 0 view .LVU308
 853 006e 0422     		movs	r2, #4
 854 0070 0592     		str	r2, [sp, #20]
 350:Core/Src/adc.c ****   sConfig.Offset = 0;
 855              		.loc 1 350 3 is_stmt 1 view .LVU309
 856              		.loc 1 350 18 is_stmt 0 view .LVU310
 857 0072 0693     		str	r3, [sp, #24]
 351:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 858              		.loc 1 351 3 is_stmt 1 view .LVU311
 859              		.loc 1 351 7 is_stmt 0 view .LVU312
 860 0074 0DEB0201 		add	r1, sp, r2
 861 0078 0D48     		ldr	r0, .L57
 862 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 863              	.LVL43:
 864              		.loc 1 351 6 view .LVU313
 865 007e 80B9     		cbnz	r0, .L55
 866              	.L50:
 352:Core/Src/adc.c ****   {
 353:Core/Src/adc.c ****     Error_Handler();
 354:Core/Src/adc.c ****   }
 355:Core/Src/adc.c **** 
 356:Core/Src/adc.c ****   /** Configure Regular Channel
 357:Core/Src/adc.c ****   */
 358:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 867              		.loc 1 358 3 is_stmt 1 view .LVU314
 868              		.loc 1 358 19 is_stmt 0 view .LVU315
 869 0080 0E4B     		ldr	r3, .L57+12
 870 0082 0193     		str	r3, [sp, #4]
 359:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 871              		.loc 1 359 3 is_stmt 1 view .LVU316
 872              		.loc 1 359 16 is_stmt 0 view .LVU317
 873 0084 0C23     		movs	r3, #12
 874 0086 0293     		str	r3, [sp, #8]
 360:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 875              		.loc 1 360 3 is_stmt 1 view .LVU318
 876              		.loc 1 360 7 is_stmt 0 view .LVU319
 877 0088 01A9     		add	r1, sp, #4
 878 008a 0948     		ldr	r0, .L57
 879 008c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 880              	.LVL44:
ARM GAS  C:\temp\ccmYnzEf.s 			page 23


 881              		.loc 1 360 6 view .LVU320
 882 0090 50B9     		cbnz	r0, .L56
 883              	.L47:
 361:Core/Src/adc.c ****   {
 362:Core/Src/adc.c ****     Error_Handler();
 363:Core/Src/adc.c ****   }
 364:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_Init 2 */
 365:Core/Src/adc.c **** 
 366:Core/Src/adc.c ****   /* USER CODE END ADC3_Init 2 */
 367:Core/Src/adc.c **** 
 368:Core/Src/adc.c **** }
 884              		.loc 1 368 1 view .LVU321
 885 0092 0CB0     		add	sp, sp, #48
 886              	.LCFI10:
 887              		.cfi_remember_state
 888              		.cfi_def_cfa_offset 8
 889              		@ sp needed
 890 0094 10BD     		pop	{r4, pc}
 891              	.L53:
 892              	.LCFI11:
 893              		.cfi_restore_state
 332:Core/Src/adc.c ****   }
 894              		.loc 1 332 5 is_stmt 1 view .LVU322
 895 0096 FFF7FEFF 		bl	Error_Handler
 896              	.LVL45:
 897 009a D9E7     		b	.L48
 898              	.L54:
 340:Core/Src/adc.c ****   }
 899              		.loc 1 340 5 view .LVU323
 900 009c FFF7FEFF 		bl	Error_Handler
 901              	.LVL46:
 902 00a0 DDE7     		b	.L49
 903              	.L55:
 353:Core/Src/adc.c ****   }
 904              		.loc 1 353 5 view .LVU324
 905 00a2 FFF7FEFF 		bl	Error_Handler
 906              	.LVL47:
 907 00a6 EBE7     		b	.L50
 908              	.L56:
 362:Core/Src/adc.c ****   }
 909              		.loc 1 362 5 view .LVU325
 910 00a8 FFF7FEFF 		bl	Error_Handler
 911              	.LVL48:
 912              		.loc 1 368 1 is_stmt 0 view .LVU326
 913 00ac F1E7     		b	.L47
 914              	.L58:
 915 00ae 00BF     		.align	2
 916              	.L57:
 917 00b0 00000000 		.word	.LANCHOR2
 918 00b4 00040050 		.word	1342178304
 919 00b8 00106032 		.word	845156352
 920 00bc 02003004 		.word	70254594
 921              		.cfi_endproc
 922              	.LFE334:
 924              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 925              		.align	1
 926              		.global	HAL_ADC_MspInit
ARM GAS  C:\temp\ccmYnzEf.s 			page 24


 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 931              	HAL_ADC_MspInit:
 932              	.LVL49:
 933              	.LFB335:
 369:Core/Src/adc.c **** 
 370:Core/Src/adc.c **** static uint32_t HAL_RCC_ADC12_CLK_ENABLED=0;
 371:Core/Src/adc.c **** 
 372:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 373:Core/Src/adc.c **** {
 934              		.loc 1 373 1 is_stmt 1 view -0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 136
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              		.loc 1 373 1 is_stmt 0 view .LVU328
 939 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 940              	.LCFI12:
 941              		.cfi_def_cfa_offset 20
 942              		.cfi_offset 4, -20
 943              		.cfi_offset 5, -16
 944              		.cfi_offset 6, -12
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 A3B0     		sub	sp, sp, #140
 948              	.LCFI13:
 949              		.cfi_def_cfa_offset 160
 950 0004 0446     		mov	r4, r0
 374:Core/Src/adc.c **** 
 375:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 951              		.loc 1 375 3 is_stmt 1 view .LVU329
 952              		.loc 1 375 20 is_stmt 0 view .LVU330
 953 0006 0021     		movs	r1, #0
 954 0008 1D91     		str	r1, [sp, #116]
 955 000a 1E91     		str	r1, [sp, #120]
 956 000c 1F91     		str	r1, [sp, #124]
 957 000e 2091     		str	r1, [sp, #128]
 958 0010 2191     		str	r1, [sp, #132]
 376:Core/Src/adc.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 959              		.loc 1 376 3 is_stmt 1 view .LVU331
 960              		.loc 1 376 28 is_stmt 0 view .LVU332
 961 0012 5422     		movs	r2, #84
 962 0014 08A8     		add	r0, sp, #32
 963              	.LVL50:
 964              		.loc 1 376 28 view .LVU333
 965 0016 FFF7FEFF 		bl	memset
 966              	.LVL51:
 377:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 967              		.loc 1 377 3 is_stmt 1 view .LVU334
 968              		.loc 1 377 15 is_stmt 0 view .LVU335
 969 001a 2368     		ldr	r3, [r4]
 970              		.loc 1 377 5 view .LVU336
 971 001c B3F1A04F 		cmp	r3, #1342177280
 972 0020 08D0     		beq	.L72
 378:Core/Src/adc.c ****   {
 379:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 380:Core/Src/adc.c **** 
ARM GAS  C:\temp\ccmYnzEf.s 			page 25


 381:Core/Src/adc.c **** 
 382:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 383:Core/Src/adc.c **** 
 384:Core/Src/adc.c ****   /** Initializes the peripherals clocks
 385:Core/Src/adc.c ****   */
 386:Core/Src/adc.c ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 387:Core/Src/adc.c ****     PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 388:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 389:Core/Src/adc.c ****     {
 390:Core/Src/adc.c ****       Error_Handler();
 391:Core/Src/adc.c ****     }
 392:Core/Src/adc.c **** 
 393:Core/Src/adc.c ****     /* ADC1 clock enable */
 394:Core/Src/adc.c ****     HAL_RCC_ADC12_CLK_ENABLED++;
 395:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 396:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 397:Core/Src/adc.c ****     }
 398:Core/Src/adc.c **** 
 399:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 400:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 401:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 402:Core/Src/adc.c ****     PC0     ------> ADC1_IN6
 403:Core/Src/adc.c ****     PC1     ------> ADC1_IN7
 404:Core/Src/adc.c ****     PC2     ------> ADC1_IN8
 405:Core/Src/adc.c ****     PC3     ------> ADC1_IN9
 406:Core/Src/adc.c ****     PA0     ------> ADC1_IN1
 407:Core/Src/adc.c ****     PA1     ------> ADC1_IN2
 408:Core/Src/adc.c ****     PA2     ------> ADC1_IN3
 409:Core/Src/adc.c ****     PA3     ------> ADC1_IN4
 410:Core/Src/adc.c ****     */
 411:Core/Src/adc.c ****     GPIO_InitStruct.Pin = I1_Pin|I2_Pin|I3_Pin|I4_Pin;
 412:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 413:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 414:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 415:Core/Src/adc.c **** 
 416:Core/Src/adc.c ****     GPIO_InitStruct.Pin = I5_Pin|I6_Pin|I7_Pin|I8_Pin;
 417:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 418:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 419:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 420:Core/Src/adc.c **** 
 421:Core/Src/adc.c ****     /* ADC1 DMA Init */
 422:Core/Src/adc.c ****     /* ADC1 Init */
 423:Core/Src/adc.c ****     hdma_adc1.Instance = DMA1_Channel1;
 424:Core/Src/adc.c ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 425:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 426:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 427:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 428:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 429:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 430:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 431:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 432:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 433:Core/Src/adc.c ****     {
 434:Core/Src/adc.c ****       Error_Handler();
 435:Core/Src/adc.c ****     }
 436:Core/Src/adc.c **** 
 437:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
ARM GAS  C:\temp\ccmYnzEf.s 			page 26


 438:Core/Src/adc.c **** 
 439:Core/Src/adc.c ****     /* ADC1 interrupt Init */
 440:Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC1_2_IRQn, 0, 0);
 441:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 442:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 443:Core/Src/adc.c **** 
 444:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 445:Core/Src/adc.c ****   }
 446:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC2)
 973              		.loc 1 446 8 is_stmt 1 view .LVU337
 974              		.loc 1 446 10 is_stmt 0 view .LVU338
 975 0022 944A     		ldr	r2, .L83
 976 0024 9342     		cmp	r3, r2
 977 0026 6DD0     		beq	.L73
 447:Core/Src/adc.c ****   {
 448:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 449:Core/Src/adc.c **** 
 450:Core/Src/adc.c ****   /* USER CODE END ADC2_MspInit 0 */
 451:Core/Src/adc.c **** 
 452:Core/Src/adc.c ****   /** Initializes the peripherals clocks
 453:Core/Src/adc.c ****   */
 454:Core/Src/adc.c ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 455:Core/Src/adc.c ****     PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 456:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 457:Core/Src/adc.c ****     {
 458:Core/Src/adc.c ****       Error_Handler();
 459:Core/Src/adc.c ****     }
 460:Core/Src/adc.c **** 
 461:Core/Src/adc.c ****     /* ADC2 clock enable */
 462:Core/Src/adc.c ****     HAL_RCC_ADC12_CLK_ENABLED++;
 463:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 464:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 465:Core/Src/adc.c ****     }
 466:Core/Src/adc.c **** 
 467:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 468:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 469:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 470:Core/Src/adc.c ****     PA4     ------> ADC2_IN17
 471:Core/Src/adc.c ****     PA5     ------> ADC2_IN13
 472:Core/Src/adc.c ****     PA6     ------> ADC2_IN3
 473:Core/Src/adc.c ****     PA7     ------> ADC2_IN4
 474:Core/Src/adc.c ****     PC4     ------> ADC2_IN5
 475:Core/Src/adc.c ****     PC5     ------> ADC2_IN11
 476:Core/Src/adc.c ****     */
 477:Core/Src/adc.c ****     GPIO_InitStruct.Pin = Temp1_MCU_Pin|Temp2_MCU_Pin|Temp3_MCU_Pin|Temp4_MCU_Pin;
 478:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 479:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 480:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 481:Core/Src/adc.c **** 
 482:Core/Src/adc.c ****     GPIO_InitStruct.Pin = Temp5_MCU_Pin|Temp6_MCU_Pin;
 483:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 484:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 485:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 486:Core/Src/adc.c **** 
 487:Core/Src/adc.c ****     /* ADC2 DMA Init */
 488:Core/Src/adc.c ****     /* ADC2 Init */
 489:Core/Src/adc.c ****     hdma_adc2.Instance = DMA1_Channel2;
ARM GAS  C:\temp\ccmYnzEf.s 			page 27


 490:Core/Src/adc.c ****     hdma_adc2.Init.Request = DMA_REQUEST_ADC2;
 491:Core/Src/adc.c ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 492:Core/Src/adc.c ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 493:Core/Src/adc.c ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 494:Core/Src/adc.c ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 495:Core/Src/adc.c ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 496:Core/Src/adc.c ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 497:Core/Src/adc.c ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 498:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 499:Core/Src/adc.c ****     {
 500:Core/Src/adc.c ****       Error_Handler();
 501:Core/Src/adc.c ****     }
 502:Core/Src/adc.c **** 
 503:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc2);
 504:Core/Src/adc.c **** 
 505:Core/Src/adc.c ****     /* ADC2 interrupt Init */
 506:Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC1_2_IRQn, 0, 0);
 507:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 508:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 509:Core/Src/adc.c **** 
 510:Core/Src/adc.c ****   /* USER CODE END ADC2_MspInit 1 */
 511:Core/Src/adc.c ****   }
 512:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC3)
 978              		.loc 1 512 8 is_stmt 1 view .LVU339
 979              		.loc 1 512 10 is_stmt 0 view .LVU340
 980 0028 934A     		ldr	r2, .L83+4
 981 002a 9342     		cmp	r3, r2
 982 002c 00F0D380 		beq	.L74
 983              	.L59:
 513:Core/Src/adc.c ****   {
 514:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 0 */
 515:Core/Src/adc.c **** 
 516:Core/Src/adc.c ****   /* USER CODE END ADC3_MspInit 0 */
 517:Core/Src/adc.c **** 
 518:Core/Src/adc.c ****   /** Initializes the peripherals clocks
 519:Core/Src/adc.c ****   */
 520:Core/Src/adc.c ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC345;
 521:Core/Src/adc.c ****     PeriphClkInit.Adc345ClockSelection = RCC_ADC345CLKSOURCE_SYSCLK;
 522:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 523:Core/Src/adc.c ****     {
 524:Core/Src/adc.c ****       Error_Handler();
 525:Core/Src/adc.c ****     }
 526:Core/Src/adc.c **** 
 527:Core/Src/adc.c ****     /* ADC3 clock enable */
 528:Core/Src/adc.c ****     __HAL_RCC_ADC345_CLK_ENABLE();
 529:Core/Src/adc.c **** 
 530:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 531:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 532:Core/Src/adc.c ****     PB0     ------> ADC3_IN12
 533:Core/Src/adc.c ****     PB1     ------> ADC3_IN1
 534:Core/Src/adc.c ****     */
 535:Core/Src/adc.c ****     GPIO_InitStruct.Pin = Temp7_MCU_Pin|Temp8_MCU_Pin;
 536:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 537:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 538:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 539:Core/Src/adc.c **** 
 540:Core/Src/adc.c ****     /* ADC3 DMA Init */
ARM GAS  C:\temp\ccmYnzEf.s 			page 28


 541:Core/Src/adc.c ****     /* ADC3 Init */
 542:Core/Src/adc.c ****     hdma_adc3.Instance = DMA2_Channel2;
 543:Core/Src/adc.c ****     hdma_adc3.Init.Request = DMA_REQUEST_ADC3;
 544:Core/Src/adc.c ****     hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 545:Core/Src/adc.c ****     hdma_adc3.Init.PeriphInc = DMA_PINC_DISABLE;
 546:Core/Src/adc.c ****     hdma_adc3.Init.MemInc = DMA_MINC_ENABLE;
 547:Core/Src/adc.c ****     hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 548:Core/Src/adc.c ****     hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 549:Core/Src/adc.c ****     hdma_adc3.Init.Mode = DMA_CIRCULAR;
 550:Core/Src/adc.c ****     hdma_adc3.Init.Priority = DMA_PRIORITY_LOW;
 551:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 552:Core/Src/adc.c ****     {
 553:Core/Src/adc.c ****       Error_Handler();
 554:Core/Src/adc.c ****     }
 555:Core/Src/adc.c **** 
 556:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc3);
 557:Core/Src/adc.c **** 
 558:Core/Src/adc.c ****     /* ADC3 interrupt Init */
 559:Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC3_IRQn, 0, 0);
 560:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC3_IRQn);
 561:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 562:Core/Src/adc.c **** 
 563:Core/Src/adc.c ****   /* USER CODE END ADC3_MspInit 1 */
 564:Core/Src/adc.c ****   }
 565:Core/Src/adc.c **** }
 984              		.loc 1 565 1 view .LVU341
 985 0030 23B0     		add	sp, sp, #140
 986              	.LCFI14:
 987              		.cfi_remember_state
 988              		.cfi_def_cfa_offset 20
 989              		@ sp needed
 990 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 991              	.LVL52:
 992              	.L72:
 993              	.LCFI15:
 994              		.cfi_restore_state
 386:Core/Src/adc.c ****     PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 995              		.loc 1 386 5 is_stmt 1 view .LVU342
 386:Core/Src/adc.c ****     PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 996              		.loc 1 386 40 is_stmt 0 view .LVU343
 997 0034 4FF40043 		mov	r3, #32768
 998 0038 0893     		str	r3, [sp, #32]
 387:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 999              		.loc 1 387 5 is_stmt 1 view .LVU344
 387:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1000              		.loc 1 387 39 is_stmt 0 view .LVU345
 1001 003a 4FF00053 		mov	r3, #536870912
 1002 003e 1993     		str	r3, [sp, #100]
 388:Core/Src/adc.c ****     {
 1003              		.loc 1 388 5 is_stmt 1 view .LVU346
 388:Core/Src/adc.c ****     {
 1004              		.loc 1 388 9 is_stmt 0 view .LVU347
 1005 0040 08A8     		add	r0, sp, #32
 1006 0042 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1007              	.LVL53:
 388:Core/Src/adc.c ****     {
 1008              		.loc 1 388 8 view .LVU348
ARM GAS  C:\temp\ccmYnzEf.s 			page 29


 1009 0046 0028     		cmp	r0, #0
 1010 0048 4BD1     		bne	.L75
 1011              	.L61:
 394:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1012              		.loc 1 394 5 is_stmt 1 view .LVU349
 394:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1013              		.loc 1 394 30 is_stmt 0 view .LVU350
 1014 004a 8C4A     		ldr	r2, .L83+8
 1015 004c 1368     		ldr	r3, [r2]
 1016 004e 0133     		adds	r3, r3, #1
 1017 0050 1360     		str	r3, [r2]
 395:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1018              		.loc 1 395 5 is_stmt 1 view .LVU351
 395:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1019              		.loc 1 395 7 is_stmt 0 view .LVU352
 1020 0052 012B     		cmp	r3, #1
 1021 0054 48D0     		beq	.L76
 1022              	.L62:
 396:Core/Src/adc.c ****     }
 1023              		.loc 1 396 7 is_stmt 1 discriminator 1 view .LVU353
 399:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1024              		.loc 1 399 5 discriminator 1 view .LVU354
 1025              	.LBB2:
 399:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1026              		.loc 1 399 5 discriminator 1 view .LVU355
 399:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1027              		.loc 1 399 5 discriminator 1 view .LVU356
 1028 0056 8A4B     		ldr	r3, .L83+12
 1029 0058 DA6C     		ldr	r2, [r3, #76]
 1030 005a 42F00402 		orr	r2, r2, #4
 1031 005e DA64     		str	r2, [r3, #76]
 399:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1032              		.loc 1 399 5 discriminator 1 view .LVU357
 1033 0060 DA6C     		ldr	r2, [r3, #76]
 1034 0062 02F00402 		and	r2, r2, #4
 1035 0066 0192     		str	r2, [sp, #4]
 399:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1036              		.loc 1 399 5 discriminator 1 view .LVU358
 1037 0068 019A     		ldr	r2, [sp, #4]
 1038              	.LBE2:
 399:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1039              		.loc 1 399 5 discriminator 1 view .LVU359
 400:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 1040              		.loc 1 400 5 discriminator 1 view .LVU360
 1041              	.LBB3:
 400:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 1042              		.loc 1 400 5 discriminator 1 view .LVU361
 400:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 1043              		.loc 1 400 5 discriminator 1 view .LVU362
 1044 006a DA6C     		ldr	r2, [r3, #76]
 1045 006c 42F00102 		orr	r2, r2, #1
 1046 0070 DA64     		str	r2, [r3, #76]
 400:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 1047              		.loc 1 400 5 discriminator 1 view .LVU363
 1048 0072 DB6C     		ldr	r3, [r3, #76]
 1049 0074 03F00103 		and	r3, r3, #1
 1050 0078 0293     		str	r3, [sp, #8]
ARM GAS  C:\temp\ccmYnzEf.s 			page 30


 400:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 1051              		.loc 1 400 5 discriminator 1 view .LVU364
 1052 007a 029B     		ldr	r3, [sp, #8]
 1053              	.LBE3:
 400:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 1054              		.loc 1 400 5 discriminator 1 view .LVU365
 411:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1055              		.loc 1 411 5 discriminator 1 view .LVU366
 411:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1056              		.loc 1 411 25 is_stmt 0 discriminator 1 view .LVU367
 1057 007c 0F27     		movs	r7, #15
 1058 007e 1D97     		str	r7, [sp, #116]
 412:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1059              		.loc 1 412 5 is_stmt 1 discriminator 1 view .LVU368
 412:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1060              		.loc 1 412 26 is_stmt 0 discriminator 1 view .LVU369
 1061 0080 0326     		movs	r6, #3
 1062 0082 1E96     		str	r6, [sp, #120]
 413:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1063              		.loc 1 413 5 is_stmt 1 discriminator 1 view .LVU370
 413:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1064              		.loc 1 413 26 is_stmt 0 discriminator 1 view .LVU371
 1065 0084 0025     		movs	r5, #0
 1066 0086 1F95     		str	r5, [sp, #124]
 414:Core/Src/adc.c **** 
 1067              		.loc 1 414 5 is_stmt 1 discriminator 1 view .LVU372
 1068 0088 1DA9     		add	r1, sp, #116
 1069 008a 7E48     		ldr	r0, .L83+16
 1070 008c FFF7FEFF 		bl	HAL_GPIO_Init
 1071              	.LVL54:
 416:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1072              		.loc 1 416 5 discriminator 1 view .LVU373
 416:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1073              		.loc 1 416 25 is_stmt 0 discriminator 1 view .LVU374
 1074 0090 1D97     		str	r7, [sp, #116]
 417:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1075              		.loc 1 417 5 is_stmt 1 discriminator 1 view .LVU375
 417:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1076              		.loc 1 417 26 is_stmt 0 discriminator 1 view .LVU376
 1077 0092 1E96     		str	r6, [sp, #120]
 418:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1078              		.loc 1 418 5 is_stmt 1 discriminator 1 view .LVU377
 418:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1079              		.loc 1 418 26 is_stmt 0 discriminator 1 view .LVU378
 1080 0094 1F95     		str	r5, [sp, #124]
 419:Core/Src/adc.c **** 
 1081              		.loc 1 419 5 is_stmt 1 discriminator 1 view .LVU379
 1082 0096 1DA9     		add	r1, sp, #116
 1083 0098 4FF09040 		mov	r0, #1207959552
 1084 009c FFF7FEFF 		bl	HAL_GPIO_Init
 1085              	.LVL55:
 423:Core/Src/adc.c ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 1086              		.loc 1 423 5 discriminator 1 view .LVU380
 423:Core/Src/adc.c ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 1087              		.loc 1 423 24 is_stmt 0 discriminator 1 view .LVU381
 1088 00a0 7948     		ldr	r0, .L83+20
 1089 00a2 7A4B     		ldr	r3, .L83+24
ARM GAS  C:\temp\ccmYnzEf.s 			page 31


 1090 00a4 0360     		str	r3, [r0]
 424:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1091              		.loc 1 424 5 is_stmt 1 discriminator 1 view .LVU382
 424:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1092              		.loc 1 424 28 is_stmt 0 discriminator 1 view .LVU383
 1093 00a6 0523     		movs	r3, #5
 1094 00a8 4360     		str	r3, [r0, #4]
 425:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 1095              		.loc 1 425 5 is_stmt 1 discriminator 1 view .LVU384
 425:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 1096              		.loc 1 425 30 is_stmt 0 discriminator 1 view .LVU385
 1097 00aa 8560     		str	r5, [r0, #8]
 426:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 1098              		.loc 1 426 5 is_stmt 1 discriminator 1 view .LVU386
 426:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 1099              		.loc 1 426 30 is_stmt 0 discriminator 1 view .LVU387
 1100 00ac C560     		str	r5, [r0, #12]
 427:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 1101              		.loc 1 427 5 is_stmt 1 discriminator 1 view .LVU388
 427:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 1102              		.loc 1 427 27 is_stmt 0 discriminator 1 view .LVU389
 1103 00ae 8023     		movs	r3, #128
 1104 00b0 0361     		str	r3, [r0, #16]
 428:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 1105              		.loc 1 428 5 is_stmt 1 discriminator 1 view .LVU390
 428:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 1106              		.loc 1 428 40 is_stmt 0 discriminator 1 view .LVU391
 1107 00b2 4FF40073 		mov	r3, #512
 1108 00b6 4361     		str	r3, [r0, #20]
 429:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 1109              		.loc 1 429 5 is_stmt 1 discriminator 1 view .LVU392
 429:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 1110              		.loc 1 429 37 is_stmt 0 discriminator 1 view .LVU393
 1111 00b8 4FF40063 		mov	r3, #2048
 1112 00bc 8361     		str	r3, [r0, #24]
 430:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 1113              		.loc 1 430 5 is_stmt 1 discriminator 1 view .LVU394
 430:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 1114              		.loc 1 430 25 is_stmt 0 discriminator 1 view .LVU395
 1115 00be 2023     		movs	r3, #32
 1116 00c0 C361     		str	r3, [r0, #28]
 431:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 1117              		.loc 1 431 5 is_stmt 1 discriminator 1 view .LVU396
 431:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 1118              		.loc 1 431 29 is_stmt 0 discriminator 1 view .LVU397
 1119 00c2 0562     		str	r5, [r0, #32]
 432:Core/Src/adc.c ****     {
 1120              		.loc 1 432 5 is_stmt 1 discriminator 1 view .LVU398
 432:Core/Src/adc.c ****     {
 1121              		.loc 1 432 9 is_stmt 0 discriminator 1 view .LVU399
 1122 00c4 FFF7FEFF 		bl	HAL_DMA_Init
 1123              	.LVL56:
 432:Core/Src/adc.c ****     {
 1124              		.loc 1 432 8 discriminator 1 view .LVU400
 1125 00c8 C8B9     		cbnz	r0, .L77
 1126              	.L63:
 437:Core/Src/adc.c **** 
ARM GAS  C:\temp\ccmYnzEf.s 			page 32


 1127              		.loc 1 437 5 is_stmt 1 view .LVU401
 437:Core/Src/adc.c **** 
 1128              		.loc 1 437 5 view .LVU402
 1129 00ca 6F4B     		ldr	r3, .L83+20
 1130 00cc 6365     		str	r3, [r4, #84]
 437:Core/Src/adc.c **** 
 1131              		.loc 1 437 5 view .LVU403
 1132 00ce 9C62     		str	r4, [r3, #40]
 437:Core/Src/adc.c **** 
 1133              		.loc 1 437 5 view .LVU404
 440:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 1134              		.loc 1 440 5 view .LVU405
 1135 00d0 0022     		movs	r2, #0
 1136 00d2 1146     		mov	r1, r2
 1137 00d4 1220     		movs	r0, #18
 1138 00d6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1139              	.LVL57:
 441:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 1140              		.loc 1 441 5 view .LVU406
 1141 00da 1220     		movs	r0, #18
 1142 00dc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1143              	.LVL58:
 1144 00e0 A6E7     		b	.L59
 1145              	.L75:
 390:Core/Src/adc.c ****     }
 1146              		.loc 1 390 7 view .LVU407
 1147 00e2 FFF7FEFF 		bl	Error_Handler
 1148              	.LVL59:
 1149 00e6 B0E7     		b	.L61
 1150              	.L76:
 396:Core/Src/adc.c ****     }
 1151              		.loc 1 396 7 view .LVU408
 1152              	.LBB4:
 396:Core/Src/adc.c ****     }
 1153              		.loc 1 396 7 view .LVU409
 396:Core/Src/adc.c ****     }
 1154              		.loc 1 396 7 view .LVU410
 1155 00e8 654B     		ldr	r3, .L83+12
 1156 00ea DA6C     		ldr	r2, [r3, #76]
 1157 00ec 42F40052 		orr	r2, r2, #8192
 1158 00f0 DA64     		str	r2, [r3, #76]
 396:Core/Src/adc.c ****     }
 1159              		.loc 1 396 7 view .LVU411
 1160 00f2 DB6C     		ldr	r3, [r3, #76]
 1161 00f4 03F40053 		and	r3, r3, #8192
 1162 00f8 0093     		str	r3, [sp]
 396:Core/Src/adc.c ****     }
 1163              		.loc 1 396 7 view .LVU412
 1164 00fa 009B     		ldr	r3, [sp]
 1165 00fc ABE7     		b	.L62
 1166              	.L77:
 1167              	.LBE4:
 434:Core/Src/adc.c ****     }
 1168              		.loc 1 434 7 view .LVU413
 1169 00fe FFF7FEFF 		bl	Error_Handler
 1170              	.LVL60:
 1171 0102 E2E7     		b	.L63
ARM GAS  C:\temp\ccmYnzEf.s 			page 33


 1172              	.L73:
 454:Core/Src/adc.c ****     PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 1173              		.loc 1 454 5 view .LVU414
 454:Core/Src/adc.c ****     PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 1174              		.loc 1 454 40 is_stmt 0 view .LVU415
 1175 0104 4FF40043 		mov	r3, #32768
 1176 0108 0893     		str	r3, [sp, #32]
 455:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1177              		.loc 1 455 5 is_stmt 1 view .LVU416
 455:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1178              		.loc 1 455 39 is_stmt 0 view .LVU417
 1179 010a 4FF00053 		mov	r3, #536870912
 1180 010e 1993     		str	r3, [sp, #100]
 456:Core/Src/adc.c ****     {
 1181              		.loc 1 456 5 is_stmt 1 view .LVU418
 456:Core/Src/adc.c ****     {
 1182              		.loc 1 456 9 is_stmt 0 view .LVU419
 1183 0110 08A8     		add	r0, sp, #32
 1184 0112 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1185              	.LVL61:
 456:Core/Src/adc.c ****     {
 1186              		.loc 1 456 8 view .LVU420
 1187 0116 0028     		cmp	r0, #0
 1188 0118 4CD1     		bne	.L78
 1189              	.L66:
 462:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1190              		.loc 1 462 5 is_stmt 1 view .LVU421
 462:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 1191              		.loc 1 462 30 is_stmt 0 view .LVU422
 1192 011a 584A     		ldr	r2, .L83+8
 1193 011c 1368     		ldr	r3, [r2]
 1194 011e 0133     		adds	r3, r3, #1
 1195 0120 1360     		str	r3, [r2]
 463:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1196              		.loc 1 463 5 is_stmt 1 view .LVU423
 463:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 1197              		.loc 1 463 7 is_stmt 0 view .LVU424
 1198 0122 012B     		cmp	r3, #1
 1199 0124 49D0     		beq	.L79
 1200              	.L67:
 464:Core/Src/adc.c ****     }
 1201              		.loc 1 464 7 is_stmt 1 discriminator 1 view .LVU425
 467:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 1202              		.loc 1 467 5 discriminator 1 view .LVU426
 1203              	.LBB5:
 467:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 1204              		.loc 1 467 5 discriminator 1 view .LVU427
 467:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 1205              		.loc 1 467 5 discriminator 1 view .LVU428
 1206 0126 564B     		ldr	r3, .L83+12
 1207 0128 DA6C     		ldr	r2, [r3, #76]
 1208 012a 42F00102 		orr	r2, r2, #1
 1209 012e DA64     		str	r2, [r3, #76]
 467:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 1210              		.loc 1 467 5 discriminator 1 view .LVU429
 1211 0130 DA6C     		ldr	r2, [r3, #76]
 1212 0132 02F00102 		and	r2, r2, #1
ARM GAS  C:\temp\ccmYnzEf.s 			page 34


 1213 0136 0492     		str	r2, [sp, #16]
 467:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 1214              		.loc 1 467 5 discriminator 1 view .LVU430
 1215 0138 049A     		ldr	r2, [sp, #16]
 1216              	.LBE5:
 467:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 1217              		.loc 1 467 5 discriminator 1 view .LVU431
 468:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 1218              		.loc 1 468 5 discriminator 1 view .LVU432
 1219              	.LBB6:
 468:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 1220              		.loc 1 468 5 discriminator 1 view .LVU433
 468:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 1221              		.loc 1 468 5 discriminator 1 view .LVU434
 1222 013a DA6C     		ldr	r2, [r3, #76]
 1223 013c 42F00402 		orr	r2, r2, #4
 1224 0140 DA64     		str	r2, [r3, #76]
 468:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 1225              		.loc 1 468 5 discriminator 1 view .LVU435
 1226 0142 DB6C     		ldr	r3, [r3, #76]
 1227 0144 03F00403 		and	r3, r3, #4
 1228 0148 0593     		str	r3, [sp, #20]
 468:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 1229              		.loc 1 468 5 discriminator 1 view .LVU436
 1230 014a 059B     		ldr	r3, [sp, #20]
 1231              	.LBE6:
 468:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 1232              		.loc 1 468 5 discriminator 1 view .LVU437
 477:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1233              		.loc 1 477 5 discriminator 1 view .LVU438
 477:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1234              		.loc 1 477 25 is_stmt 0 discriminator 1 view .LVU439
 1235 014c F023     		movs	r3, #240
 1236 014e 1D93     		str	r3, [sp, #116]
 478:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1237              		.loc 1 478 5 is_stmt 1 discriminator 1 view .LVU440
 478:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1238              		.loc 1 478 26 is_stmt 0 discriminator 1 view .LVU441
 1239 0150 0326     		movs	r6, #3
 1240 0152 1E96     		str	r6, [sp, #120]
 479:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1241              		.loc 1 479 5 is_stmt 1 discriminator 1 view .LVU442
 479:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1242              		.loc 1 479 26 is_stmt 0 discriminator 1 view .LVU443
 1243 0154 0025     		movs	r5, #0
 1244 0156 1F95     		str	r5, [sp, #124]
 480:Core/Src/adc.c **** 
 1245              		.loc 1 480 5 is_stmt 1 discriminator 1 view .LVU444
 1246 0158 1DA9     		add	r1, sp, #116
 1247 015a 4FF09040 		mov	r0, #1207959552
 1248 015e FFF7FEFF 		bl	HAL_GPIO_Init
 1249              	.LVL62:
 482:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1250              		.loc 1 482 5 discriminator 1 view .LVU445
 482:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1251              		.loc 1 482 25 is_stmt 0 discriminator 1 view .LVU446
 1252 0162 3023     		movs	r3, #48
ARM GAS  C:\temp\ccmYnzEf.s 			page 35


 1253 0164 1D93     		str	r3, [sp, #116]
 483:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1254              		.loc 1 483 5 is_stmt 1 discriminator 1 view .LVU447
 483:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1255              		.loc 1 483 26 is_stmt 0 discriminator 1 view .LVU448
 1256 0166 1E96     		str	r6, [sp, #120]
 484:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1257              		.loc 1 484 5 is_stmt 1 discriminator 1 view .LVU449
 484:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1258              		.loc 1 484 26 is_stmt 0 discriminator 1 view .LVU450
 1259 0168 1F95     		str	r5, [sp, #124]
 485:Core/Src/adc.c **** 
 1260              		.loc 1 485 5 is_stmt 1 discriminator 1 view .LVU451
 1261 016a 1DA9     		add	r1, sp, #116
 1262 016c 4548     		ldr	r0, .L83+16
 1263 016e FFF7FEFF 		bl	HAL_GPIO_Init
 1264              	.LVL63:
 489:Core/Src/adc.c ****     hdma_adc2.Init.Request = DMA_REQUEST_ADC2;
 1265              		.loc 1 489 5 discriminator 1 view .LVU452
 489:Core/Src/adc.c ****     hdma_adc2.Init.Request = DMA_REQUEST_ADC2;
 1266              		.loc 1 489 24 is_stmt 0 discriminator 1 view .LVU453
 1267 0172 4748     		ldr	r0, .L83+28
 1268 0174 474B     		ldr	r3, .L83+32
 1269 0176 0360     		str	r3, [r0]
 490:Core/Src/adc.c ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1270              		.loc 1 490 5 is_stmt 1 discriminator 1 view .LVU454
 490:Core/Src/adc.c ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1271              		.loc 1 490 28 is_stmt 0 discriminator 1 view .LVU455
 1272 0178 2423     		movs	r3, #36
 1273 017a 4360     		str	r3, [r0, #4]
 491:Core/Src/adc.c ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 1274              		.loc 1 491 5 is_stmt 1 discriminator 1 view .LVU456
 491:Core/Src/adc.c ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 1275              		.loc 1 491 30 is_stmt 0 discriminator 1 view .LVU457
 1276 017c 8560     		str	r5, [r0, #8]
 492:Core/Src/adc.c ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 1277              		.loc 1 492 5 is_stmt 1 discriminator 1 view .LVU458
 492:Core/Src/adc.c ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 1278              		.loc 1 492 30 is_stmt 0 discriminator 1 view .LVU459
 1279 017e C560     		str	r5, [r0, #12]
 493:Core/Src/adc.c ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 1280              		.loc 1 493 5 is_stmt 1 discriminator 1 view .LVU460
 493:Core/Src/adc.c ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 1281              		.loc 1 493 27 is_stmt 0 discriminator 1 view .LVU461
 1282 0180 8023     		movs	r3, #128
 1283 0182 0361     		str	r3, [r0, #16]
 494:Core/Src/adc.c ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 1284              		.loc 1 494 5 is_stmt 1 discriminator 1 view .LVU462
 494:Core/Src/adc.c ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 1285              		.loc 1 494 40 is_stmt 0 discriminator 1 view .LVU463
 1286 0184 4FF40073 		mov	r3, #512
 1287 0188 4361     		str	r3, [r0, #20]
 495:Core/Src/adc.c ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 1288              		.loc 1 495 5 is_stmt 1 discriminator 1 view .LVU464
 495:Core/Src/adc.c ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 1289              		.loc 1 495 37 is_stmt 0 discriminator 1 view .LVU465
 1290 018a 4FF40063 		mov	r3, #2048
ARM GAS  C:\temp\ccmYnzEf.s 			page 36


 1291 018e 8361     		str	r3, [r0, #24]
 496:Core/Src/adc.c ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 1292              		.loc 1 496 5 is_stmt 1 discriminator 1 view .LVU466
 496:Core/Src/adc.c ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 1293              		.loc 1 496 25 is_stmt 0 discriminator 1 view .LVU467
 1294 0190 2023     		movs	r3, #32
 1295 0192 C361     		str	r3, [r0, #28]
 497:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 1296              		.loc 1 497 5 is_stmt 1 discriminator 1 view .LVU468
 497:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 1297              		.loc 1 497 29 is_stmt 0 discriminator 1 view .LVU469
 1298 0194 0562     		str	r5, [r0, #32]
 498:Core/Src/adc.c ****     {
 1299              		.loc 1 498 5 is_stmt 1 discriminator 1 view .LVU470
 498:Core/Src/adc.c ****     {
 1300              		.loc 1 498 9 is_stmt 0 discriminator 1 view .LVU471
 1301 0196 FFF7FEFF 		bl	HAL_DMA_Init
 1302              	.LVL64:
 498:Core/Src/adc.c ****     {
 1303              		.loc 1 498 8 discriminator 1 view .LVU472
 1304 019a C8B9     		cbnz	r0, .L80
 1305              	.L68:
 503:Core/Src/adc.c **** 
 1306              		.loc 1 503 5 is_stmt 1 view .LVU473
 503:Core/Src/adc.c **** 
 1307              		.loc 1 503 5 view .LVU474
 1308 019c 3C4B     		ldr	r3, .L83+28
 1309 019e 6365     		str	r3, [r4, #84]
 503:Core/Src/adc.c **** 
 1310              		.loc 1 503 5 view .LVU475
 1311 01a0 9C62     		str	r4, [r3, #40]
 503:Core/Src/adc.c **** 
 1312              		.loc 1 503 5 view .LVU476
 506:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 1313              		.loc 1 506 5 view .LVU477
 1314 01a2 0022     		movs	r2, #0
 1315 01a4 1146     		mov	r1, r2
 1316 01a6 1220     		movs	r0, #18
 1317 01a8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1318              	.LVL65:
 507:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 1319              		.loc 1 507 5 view .LVU478
 1320 01ac 1220     		movs	r0, #18
 1321 01ae FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1322              	.LVL66:
 1323 01b2 3DE7     		b	.L59
 1324              	.L78:
 458:Core/Src/adc.c ****     }
 1325              		.loc 1 458 7 view .LVU479
 1326 01b4 FFF7FEFF 		bl	Error_Handler
 1327              	.LVL67:
 1328 01b8 AFE7     		b	.L66
 1329              	.L79:
 464:Core/Src/adc.c ****     }
 1330              		.loc 1 464 7 view .LVU480
 1331              	.LBB7:
 464:Core/Src/adc.c ****     }
ARM GAS  C:\temp\ccmYnzEf.s 			page 37


 1332              		.loc 1 464 7 view .LVU481
 464:Core/Src/adc.c ****     }
 1333              		.loc 1 464 7 view .LVU482
 1334 01ba 314B     		ldr	r3, .L83+12
 1335 01bc DA6C     		ldr	r2, [r3, #76]
 1336 01be 42F40052 		orr	r2, r2, #8192
 1337 01c2 DA64     		str	r2, [r3, #76]
 464:Core/Src/adc.c ****     }
 1338              		.loc 1 464 7 view .LVU483
 1339 01c4 DB6C     		ldr	r3, [r3, #76]
 1340 01c6 03F40053 		and	r3, r3, #8192
 1341 01ca 0393     		str	r3, [sp, #12]
 464:Core/Src/adc.c ****     }
 1342              		.loc 1 464 7 view .LVU484
 1343 01cc 039B     		ldr	r3, [sp, #12]
 1344 01ce AAE7     		b	.L67
 1345              	.L80:
 1346              	.LBE7:
 500:Core/Src/adc.c ****     }
 1347              		.loc 1 500 7 view .LVU485
 1348 01d0 FFF7FEFF 		bl	Error_Handler
 1349              	.LVL68:
 1350 01d4 E2E7     		b	.L68
 1351              	.L74:
 520:Core/Src/adc.c ****     PeriphClkInit.Adc345ClockSelection = RCC_ADC345CLKSOURCE_SYSCLK;
 1352              		.loc 1 520 5 view .LVU486
 520:Core/Src/adc.c ****     PeriphClkInit.Adc345ClockSelection = RCC_ADC345CLKSOURCE_SYSCLK;
 1353              		.loc 1 520 40 is_stmt 0 view .LVU487
 1354 01d6 4FF48033 		mov	r3, #65536
 1355 01da 0893     		str	r3, [sp, #32]
 521:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1356              		.loc 1 521 5 is_stmt 1 view .LVU488
 521:Core/Src/adc.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1357              		.loc 1 521 40 is_stmt 0 view .LVU489
 1358 01dc 4FF00043 		mov	r3, #-2147483648
 1359 01e0 1A93     		str	r3, [sp, #104]
 522:Core/Src/adc.c ****     {
 1360              		.loc 1 522 5 is_stmt 1 view .LVU490
 522:Core/Src/adc.c ****     {
 1361              		.loc 1 522 9 is_stmt 0 view .LVU491
 1362 01e2 08A8     		add	r0, sp, #32
 1363 01e4 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1364              	.LVL69:
 522:Core/Src/adc.c ****     {
 1365              		.loc 1 522 8 view .LVU492
 1366 01e8 0028     		cmp	r0, #0
 1367 01ea 3CD1     		bne	.L81
 1368              	.L69:
 528:Core/Src/adc.c **** 
 1369              		.loc 1 528 5 is_stmt 1 view .LVU493
 1370              	.LBB8:
 528:Core/Src/adc.c **** 
 1371              		.loc 1 528 5 view .LVU494
 528:Core/Src/adc.c **** 
 1372              		.loc 1 528 5 view .LVU495
 1373 01ec 244B     		ldr	r3, .L83+12
 1374 01ee DA6C     		ldr	r2, [r3, #76]
ARM GAS  C:\temp\ccmYnzEf.s 			page 38


 1375 01f0 42F48042 		orr	r2, r2, #16384
 1376 01f4 DA64     		str	r2, [r3, #76]
 528:Core/Src/adc.c **** 
 1377              		.loc 1 528 5 view .LVU496
 1378 01f6 DA6C     		ldr	r2, [r3, #76]
 1379 01f8 02F48042 		and	r2, r2, #16384
 1380 01fc 0692     		str	r2, [sp, #24]
 528:Core/Src/adc.c **** 
 1381              		.loc 1 528 5 view .LVU497
 1382 01fe 069A     		ldr	r2, [sp, #24]
 1383              	.LBE8:
 528:Core/Src/adc.c **** 
 1384              		.loc 1 528 5 view .LVU498
 530:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 1385              		.loc 1 530 5 view .LVU499
 1386              	.LBB9:
 530:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 1387              		.loc 1 530 5 view .LVU500
 530:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 1388              		.loc 1 530 5 view .LVU501
 1389 0200 DA6C     		ldr	r2, [r3, #76]
 1390 0202 42F00202 		orr	r2, r2, #2
 1391 0206 DA64     		str	r2, [r3, #76]
 530:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 1392              		.loc 1 530 5 view .LVU502
 1393 0208 DB6C     		ldr	r3, [r3, #76]
 1394 020a 03F00203 		and	r3, r3, #2
 1395 020e 0793     		str	r3, [sp, #28]
 530:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 1396              		.loc 1 530 5 view .LVU503
 1397 0210 079B     		ldr	r3, [sp, #28]
 1398              	.LBE9:
 530:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 1399              		.loc 1 530 5 view .LVU504
 535:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1400              		.loc 1 535 5 view .LVU505
 535:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1401              		.loc 1 535 25 is_stmt 0 view .LVU506
 1402 0212 0323     		movs	r3, #3
 1403 0214 1D93     		str	r3, [sp, #116]
 536:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1404              		.loc 1 536 5 is_stmt 1 view .LVU507
 536:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1405              		.loc 1 536 26 is_stmt 0 view .LVU508
 1406 0216 1E93     		str	r3, [sp, #120]
 537:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1407              		.loc 1 537 5 is_stmt 1 view .LVU509
 537:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1408              		.loc 1 537 26 is_stmt 0 view .LVU510
 1409 0218 0025     		movs	r5, #0
 1410 021a 1F95     		str	r5, [sp, #124]
 538:Core/Src/adc.c **** 
 1411              		.loc 1 538 5 is_stmt 1 view .LVU511
 1412 021c 1DA9     		add	r1, sp, #116
 1413 021e 1E48     		ldr	r0, .L83+36
 1414 0220 FFF7FEFF 		bl	HAL_GPIO_Init
 1415              	.LVL70:
ARM GAS  C:\temp\ccmYnzEf.s 			page 39


 542:Core/Src/adc.c ****     hdma_adc3.Init.Request = DMA_REQUEST_ADC3;
 1416              		.loc 1 542 5 view .LVU512
 542:Core/Src/adc.c ****     hdma_adc3.Init.Request = DMA_REQUEST_ADC3;
 1417              		.loc 1 542 24 is_stmt 0 view .LVU513
 1418 0224 1D48     		ldr	r0, .L83+40
 1419 0226 1E4B     		ldr	r3, .L83+44
 1420 0228 0360     		str	r3, [r0]
 543:Core/Src/adc.c ****     hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1421              		.loc 1 543 5 is_stmt 1 view .LVU514
 543:Core/Src/adc.c ****     hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1422              		.loc 1 543 28 is_stmt 0 view .LVU515
 1423 022a 2523     		movs	r3, #37
 1424 022c 4360     		str	r3, [r0, #4]
 544:Core/Src/adc.c ****     hdma_adc3.Init.PeriphInc = DMA_PINC_DISABLE;
 1425              		.loc 1 544 5 is_stmt 1 view .LVU516
 544:Core/Src/adc.c ****     hdma_adc3.Init.PeriphInc = DMA_PINC_DISABLE;
 1426              		.loc 1 544 30 is_stmt 0 view .LVU517
 1427 022e 8560     		str	r5, [r0, #8]
 545:Core/Src/adc.c ****     hdma_adc3.Init.MemInc = DMA_MINC_ENABLE;
 1428              		.loc 1 545 5 is_stmt 1 view .LVU518
 545:Core/Src/adc.c ****     hdma_adc3.Init.MemInc = DMA_MINC_ENABLE;
 1429              		.loc 1 545 30 is_stmt 0 view .LVU519
 1430 0230 C560     		str	r5, [r0, #12]
 546:Core/Src/adc.c ****     hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 1431              		.loc 1 546 5 is_stmt 1 view .LVU520
 546:Core/Src/adc.c ****     hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 1432              		.loc 1 546 27 is_stmt 0 view .LVU521
 1433 0232 8023     		movs	r3, #128
 1434 0234 0361     		str	r3, [r0, #16]
 547:Core/Src/adc.c ****     hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 1435              		.loc 1 547 5 is_stmt 1 view .LVU522
 547:Core/Src/adc.c ****     hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 1436              		.loc 1 547 40 is_stmt 0 view .LVU523
 1437 0236 4FF40073 		mov	r3, #512
 1438 023a 4361     		str	r3, [r0, #20]
 548:Core/Src/adc.c ****     hdma_adc3.Init.Mode = DMA_CIRCULAR;
 1439              		.loc 1 548 5 is_stmt 1 view .LVU524
 548:Core/Src/adc.c ****     hdma_adc3.Init.Mode = DMA_CIRCULAR;
 1440              		.loc 1 548 37 is_stmt 0 view .LVU525
 1441 023c 4FF40063 		mov	r3, #2048
 1442 0240 8361     		str	r3, [r0, #24]
 549:Core/Src/adc.c ****     hdma_adc3.Init.Priority = DMA_PRIORITY_LOW;
 1443              		.loc 1 549 5 is_stmt 1 view .LVU526
 549:Core/Src/adc.c ****     hdma_adc3.Init.Priority = DMA_PRIORITY_LOW;
 1444              		.loc 1 549 25 is_stmt 0 view .LVU527
 1445 0242 2023     		movs	r3, #32
 1446 0244 C361     		str	r3, [r0, #28]
 550:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 1447              		.loc 1 550 5 is_stmt 1 view .LVU528
 550:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 1448              		.loc 1 550 29 is_stmt 0 view .LVU529
 1449 0246 0562     		str	r5, [r0, #32]
 551:Core/Src/adc.c ****     {
 1450              		.loc 1 551 5 is_stmt 1 view .LVU530
 551:Core/Src/adc.c ****     {
 1451              		.loc 1 551 9 is_stmt 0 view .LVU531
 1452 0248 FFF7FEFF 		bl	HAL_DMA_Init
ARM GAS  C:\temp\ccmYnzEf.s 			page 40


 1453              	.LVL71:
 551:Core/Src/adc.c ****     {
 1454              		.loc 1 551 8 view .LVU532
 1455 024c 70B9     		cbnz	r0, .L82
 1456              	.L70:
 556:Core/Src/adc.c **** 
 1457              		.loc 1 556 5 is_stmt 1 view .LVU533
 556:Core/Src/adc.c **** 
 1458              		.loc 1 556 5 view .LVU534
 1459 024e 134B     		ldr	r3, .L83+40
 1460 0250 6365     		str	r3, [r4, #84]
 556:Core/Src/adc.c **** 
 1461              		.loc 1 556 5 view .LVU535
 1462 0252 9C62     		str	r4, [r3, #40]
 556:Core/Src/adc.c **** 
 1463              		.loc 1 556 5 view .LVU536
 559:Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC3_IRQn);
 1464              		.loc 1 559 5 view .LVU537
 1465 0254 0022     		movs	r2, #0
 1466 0256 1146     		mov	r1, r2
 1467 0258 2F20     		movs	r0, #47
 1468 025a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1469              	.LVL72:
 560:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 1470              		.loc 1 560 5 view .LVU538
 1471 025e 2F20     		movs	r0, #47
 1472 0260 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1473              	.LVL73:
 1474              		.loc 1 565 1 is_stmt 0 view .LVU539
 1475 0264 E4E6     		b	.L59
 1476              	.L81:
 524:Core/Src/adc.c ****     }
 1477              		.loc 1 524 7 is_stmt 1 view .LVU540
 1478 0266 FFF7FEFF 		bl	Error_Handler
 1479              	.LVL74:
 1480 026a BFE7     		b	.L69
 1481              	.L82:
 553:Core/Src/adc.c ****     }
 1482              		.loc 1 553 7 view .LVU541
 1483 026c FFF7FEFF 		bl	Error_Handler
 1484              	.LVL75:
 1485 0270 EDE7     		b	.L70
 1486              	.L84:
 1487 0272 00BF     		.align	2
 1488              	.L83:
 1489 0274 00010050 		.word	1342177536
 1490 0278 00040050 		.word	1342178304
 1491 027c 00000000 		.word	.LANCHOR3
 1492 0280 00100240 		.word	1073876992
 1493 0284 00080048 		.word	1207961600
 1494 0288 00000000 		.word	.LANCHOR4
 1495 028c 08000240 		.word	1073872904
 1496 0290 00000000 		.word	.LANCHOR5
 1497 0294 1C000240 		.word	1073872924
 1498 0298 00040048 		.word	1207960576
 1499 029c 00000000 		.word	.LANCHOR6
 1500 02a0 1C040240 		.word	1073873948
ARM GAS  C:\temp\ccmYnzEf.s 			page 41


 1501              		.cfi_endproc
 1502              	.LFE335:
 1504              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 1505              		.align	1
 1506              		.global	HAL_ADC_MspDeInit
 1507              		.syntax unified
 1508              		.thumb
 1509              		.thumb_func
 1511              	HAL_ADC_MspDeInit:
 1512              	.LVL76:
 1513              	.LFB336:
 566:Core/Src/adc.c **** 
 567:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 568:Core/Src/adc.c **** {
 1514              		.loc 1 568 1 view -0
 1515              		.cfi_startproc
 1516              		@ args = 0, pretend = 0, frame = 0
 1517              		@ frame_needed = 0, uses_anonymous_args = 0
 1518              		.loc 1 568 1 is_stmt 0 view .LVU543
 1519 0000 10B5     		push	{r4, lr}
 1520              	.LCFI16:
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 4, -8
 1523              		.cfi_offset 14, -4
 1524 0002 0446     		mov	r4, r0
 569:Core/Src/adc.c **** 
 570:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 1525              		.loc 1 570 3 is_stmt 1 view .LVU544
 1526              		.loc 1 570 15 is_stmt 0 view .LVU545
 1527 0004 0368     		ldr	r3, [r0]
 1528              		.loc 1 570 5 view .LVU546
 1529 0006 B3F1A04F 		cmp	r3, #1342177280
 1530 000a 06D0     		beq	.L92
 571:Core/Src/adc.c ****   {
 572:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 573:Core/Src/adc.c **** 
 574:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 575:Core/Src/adc.c ****     /* Peripheral clock disable */
 576:Core/Src/adc.c ****     HAL_RCC_ADC12_CLK_ENABLED--;
 577:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 578:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 579:Core/Src/adc.c ****     }
 580:Core/Src/adc.c **** 
 581:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 582:Core/Src/adc.c ****     PC0     ------> ADC1_IN6
 583:Core/Src/adc.c ****     PC1     ------> ADC1_IN7
 584:Core/Src/adc.c ****     PC2     ------> ADC1_IN8
 585:Core/Src/adc.c ****     PC3     ------> ADC1_IN9
 586:Core/Src/adc.c ****     PA0     ------> ADC1_IN1
 587:Core/Src/adc.c ****     PA1     ------> ADC1_IN2
 588:Core/Src/adc.c ****     PA2     ------> ADC1_IN3
 589:Core/Src/adc.c ****     PA3     ------> ADC1_IN4
 590:Core/Src/adc.c ****     */
 591:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOC, I1_Pin|I2_Pin|I3_Pin|I4_Pin);
 592:Core/Src/adc.c **** 
 593:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, I5_Pin|I6_Pin|I7_Pin|I8_Pin);
 594:Core/Src/adc.c **** 
ARM GAS  C:\temp\ccmYnzEf.s 			page 42


 595:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 596:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 597:Core/Src/adc.c **** 
 598:Core/Src/adc.c ****     /* ADC1 interrupt Deinit */
 599:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1:ADC1_2_IRQn disable */
 600:Core/Src/adc.c ****     /**
 601:Core/Src/adc.c ****     * Uncomment the line below to disable the "ADC1_2_IRQn" interrupt
 602:Core/Src/adc.c ****     * Be aware, disabling shared interrupt may affect other IPs
 603:Core/Src/adc.c ****     */
 604:Core/Src/adc.c ****     /* HAL_NVIC_DisableIRQ(ADC1_2_IRQn); */
 605:Core/Src/adc.c ****   /* USER CODE END ADC1:ADC1_2_IRQn disable */
 606:Core/Src/adc.c **** 
 607:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 608:Core/Src/adc.c **** 
 609:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 610:Core/Src/adc.c ****   }
 611:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC2)
 1531              		.loc 1 611 8 is_stmt 1 view .LVU547
 1532              		.loc 1 611 10 is_stmt 0 view .LVU548
 1533 000c 234A     		ldr	r2, .L95
 1534 000e 9342     		cmp	r3, r2
 1535 0010 1AD0     		beq	.L93
 612:Core/Src/adc.c ****   {
 613:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 614:Core/Src/adc.c **** 
 615:Core/Src/adc.c ****   /* USER CODE END ADC2_MspDeInit 0 */
 616:Core/Src/adc.c ****     /* Peripheral clock disable */
 617:Core/Src/adc.c ****     HAL_RCC_ADC12_CLK_ENABLED--;
 618:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 619:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 620:Core/Src/adc.c ****     }
 621:Core/Src/adc.c **** 
 622:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 623:Core/Src/adc.c ****     PA4     ------> ADC2_IN17
 624:Core/Src/adc.c ****     PA5     ------> ADC2_IN13
 625:Core/Src/adc.c ****     PA6     ------> ADC2_IN3
 626:Core/Src/adc.c ****     PA7     ------> ADC2_IN4
 627:Core/Src/adc.c ****     PC4     ------> ADC2_IN5
 628:Core/Src/adc.c ****     PC5     ------> ADC2_IN11
 629:Core/Src/adc.c ****     */
 630:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, Temp1_MCU_Pin|Temp2_MCU_Pin|Temp3_MCU_Pin|Temp4_MCU_Pin);
 631:Core/Src/adc.c **** 
 632:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOC, Temp5_MCU_Pin|Temp6_MCU_Pin);
 633:Core/Src/adc.c **** 
 634:Core/Src/adc.c ****     /* ADC2 DMA DeInit */
 635:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 636:Core/Src/adc.c **** 
 637:Core/Src/adc.c ****     /* ADC2 interrupt Deinit */
 638:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2:ADC1_2_IRQn disable */
 639:Core/Src/adc.c ****     /**
 640:Core/Src/adc.c ****     * Uncomment the line below to disable the "ADC1_2_IRQn" interrupt
 641:Core/Src/adc.c ****     * Be aware, disabling shared interrupt may affect other IPs
 642:Core/Src/adc.c ****     */
 643:Core/Src/adc.c ****     /* HAL_NVIC_DisableIRQ(ADC1_2_IRQn); */
 644:Core/Src/adc.c ****   /* USER CODE END ADC2:ADC1_2_IRQn disable */
 645:Core/Src/adc.c **** 
 646:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
ARM GAS  C:\temp\ccmYnzEf.s 			page 43


 647:Core/Src/adc.c **** 
 648:Core/Src/adc.c ****   /* USER CODE END ADC2_MspDeInit 1 */
 649:Core/Src/adc.c ****   }
 650:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC3)
 1536              		.loc 1 650 8 is_stmt 1 view .LVU549
 1537              		.loc 1 650 10 is_stmt 0 view .LVU550
 1538 0012 234A     		ldr	r2, .L95+4
 1539 0014 9342     		cmp	r3, r2
 1540 0016 2ED0     		beq	.L94
 1541              	.LVL77:
 1542              	.L85:
 651:Core/Src/adc.c ****   {
 652:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 0 */
 653:Core/Src/adc.c **** 
 654:Core/Src/adc.c ****   /* USER CODE END ADC3_MspDeInit 0 */
 655:Core/Src/adc.c ****     /* Peripheral clock disable */
 656:Core/Src/adc.c ****     __HAL_RCC_ADC345_CLK_DISABLE();
 657:Core/Src/adc.c **** 
 658:Core/Src/adc.c ****     /**ADC3 GPIO Configuration
 659:Core/Src/adc.c ****     PB0     ------> ADC3_IN12
 660:Core/Src/adc.c ****     PB1     ------> ADC3_IN1
 661:Core/Src/adc.c ****     */
 662:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOB, Temp7_MCU_Pin|Temp8_MCU_Pin);
 663:Core/Src/adc.c **** 
 664:Core/Src/adc.c ****     /* ADC3 DMA DeInit */
 665:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 666:Core/Src/adc.c **** 
 667:Core/Src/adc.c ****     /* ADC3 interrupt Deinit */
 668:Core/Src/adc.c ****     HAL_NVIC_DisableIRQ(ADC3_IRQn);
 669:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 670:Core/Src/adc.c **** 
 671:Core/Src/adc.c ****   /* USER CODE END ADC3_MspDeInit 1 */
 672:Core/Src/adc.c ****   }
 673:Core/Src/adc.c **** }
 1543              		.loc 1 673 1 view .LVU551
 1544 0018 10BD     		pop	{r4, pc}
 1545              	.LVL78:
 1546              	.L92:
 576:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 1547              		.loc 1 576 5 is_stmt 1 view .LVU552
 576:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 1548              		.loc 1 576 30 is_stmt 0 view .LVU553
 1549 001a 224A     		ldr	r2, .L95+8
 1550 001c 1368     		ldr	r3, [r2]
 1551 001e 013B     		subs	r3, r3, #1
 1552 0020 1360     		str	r3, [r2]
 577:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 1553              		.loc 1 577 5 is_stmt 1 view .LVU554
 577:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 1554              		.loc 1 577 7 is_stmt 0 view .LVU555
 1555 0022 23B9     		cbnz	r3, .L87
 578:Core/Src/adc.c ****     }
 1556              		.loc 1 578 7 is_stmt 1 view .LVU556
 1557 0024 204A     		ldr	r2, .L95+12
 1558 0026 D36C     		ldr	r3, [r2, #76]
 1559 0028 23F40053 		bic	r3, r3, #8192
 1560 002c D364     		str	r3, [r2, #76]
ARM GAS  C:\temp\ccmYnzEf.s 			page 44


 1561              	.L87:
 591:Core/Src/adc.c **** 
 1562              		.loc 1 591 5 view .LVU557
 1563 002e 0F21     		movs	r1, #15
 1564 0030 1E48     		ldr	r0, .L95+16
 1565              	.LVL79:
 591:Core/Src/adc.c **** 
 1566              		.loc 1 591 5 is_stmt 0 view .LVU558
 1567 0032 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1568              	.LVL80:
 593:Core/Src/adc.c **** 
 1569              		.loc 1 593 5 is_stmt 1 view .LVU559
 1570 0036 0F21     		movs	r1, #15
 1571 0038 4FF09040 		mov	r0, #1207959552
 1572 003c FFF7FEFF 		bl	HAL_GPIO_DeInit
 1573              	.LVL81:
 596:Core/Src/adc.c **** 
 1574              		.loc 1 596 5 view .LVU560
 1575 0040 606D     		ldr	r0, [r4, #84]
 1576 0042 FFF7FEFF 		bl	HAL_DMA_DeInit
 1577              	.LVL82:
 1578 0046 E7E7     		b	.L85
 1579              	.LVL83:
 1580              	.L93:
 617:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 1581              		.loc 1 617 5 view .LVU561
 617:Core/Src/adc.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 1582              		.loc 1 617 30 is_stmt 0 view .LVU562
 1583 0048 164A     		ldr	r2, .L95+8
 1584 004a 1368     		ldr	r3, [r2]
 1585 004c 013B     		subs	r3, r3, #1
 1586 004e 1360     		str	r3, [r2]
 618:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 1587              		.loc 1 618 5 is_stmt 1 view .LVU563
 618:Core/Src/adc.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 1588              		.loc 1 618 7 is_stmt 0 view .LVU564
 1589 0050 23B9     		cbnz	r3, .L90
 619:Core/Src/adc.c ****     }
 1590              		.loc 1 619 7 is_stmt 1 view .LVU565
 1591 0052 154A     		ldr	r2, .L95+12
 1592 0054 D36C     		ldr	r3, [r2, #76]
 1593 0056 23F40053 		bic	r3, r3, #8192
 1594 005a D364     		str	r3, [r2, #76]
 1595              	.L90:
 630:Core/Src/adc.c **** 
 1596              		.loc 1 630 5 view .LVU566
 1597 005c F021     		movs	r1, #240
 1598 005e 4FF09040 		mov	r0, #1207959552
 1599              	.LVL84:
 630:Core/Src/adc.c **** 
 1600              		.loc 1 630 5 is_stmt 0 view .LVU567
 1601 0062 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1602              	.LVL85:
 632:Core/Src/adc.c **** 
 1603              		.loc 1 632 5 is_stmt 1 view .LVU568
 1604 0066 3021     		movs	r1, #48
 1605 0068 1048     		ldr	r0, .L95+16
ARM GAS  C:\temp\ccmYnzEf.s 			page 45


 1606 006a FFF7FEFF 		bl	HAL_GPIO_DeInit
 1607              	.LVL86:
 635:Core/Src/adc.c **** 
 1608              		.loc 1 635 5 view .LVU569
 1609 006e 606D     		ldr	r0, [r4, #84]
 1610 0070 FFF7FEFF 		bl	HAL_DMA_DeInit
 1611              	.LVL87:
 1612 0074 D0E7     		b	.L85
 1613              	.LVL88:
 1614              	.L94:
 656:Core/Src/adc.c **** 
 1615              		.loc 1 656 5 view .LVU570
 1616 0076 02F17042 		add	r2, r2, #-268435456
 1617 007a 02F50332 		add	r2, r2, #134144
 1618 007e D36C     		ldr	r3, [r2, #76]
 1619 0080 23F48043 		bic	r3, r3, #16384
 1620 0084 D364     		str	r3, [r2, #76]
 662:Core/Src/adc.c **** 
 1621              		.loc 1 662 5 view .LVU571
 1622 0086 0321     		movs	r1, #3
 1623 0088 0948     		ldr	r0, .L95+20
 1624              	.LVL89:
 662:Core/Src/adc.c **** 
 1625              		.loc 1 662 5 is_stmt 0 view .LVU572
 1626 008a FFF7FEFF 		bl	HAL_GPIO_DeInit
 1627              	.LVL90:
 665:Core/Src/adc.c **** 
 1628              		.loc 1 665 5 is_stmt 1 view .LVU573
 1629 008e 606D     		ldr	r0, [r4, #84]
 1630 0090 FFF7FEFF 		bl	HAL_DMA_DeInit
 1631              	.LVL91:
 668:Core/Src/adc.c ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 1632              		.loc 1 668 5 view .LVU574
 1633 0094 2F20     		movs	r0, #47
 1634 0096 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1635              	.LVL92:
 1636              		.loc 1 673 1 is_stmt 0 view .LVU575
 1637 009a BDE7     		b	.L85
 1638              	.L96:
 1639              		.align	2
 1640              	.L95:
 1641 009c 00010050 		.word	1342177536
 1642 00a0 00040050 		.word	1342178304
 1643 00a4 00000000 		.word	.LANCHOR3
 1644 00a8 00100240 		.word	1073876992
 1645 00ac 00080048 		.word	1207961600
 1646 00b0 00040048 		.word	1207960576
 1647              		.cfi_endproc
 1648              	.LFE336:
 1650              		.section	.text.Current_getvalue,"ax",%progbits
 1651              		.align	1
 1652              		.global	Current_getvalue
 1653              		.syntax unified
 1654              		.thumb
 1655              		.thumb_func
 1657              	Current_getvalue:
 1658              	.LFB337:
ARM GAS  C:\temp\ccmYnzEf.s 			page 46


 674:Core/Src/adc.c **** 
 675:Core/Src/adc.c **** /* USER CODE BEGIN 1 */
 676:Core/Src/adc.c **** 
 677:Core/Src/adc.c **** void Current_getvalue()  //µÁ¡˜
 678:Core/Src/adc.c **** {
 1659              		.loc 1 678 1 is_stmt 1 view -0
 1660              		.cfi_startproc
 1661              		@ args = 0, pretend = 0, frame = 0
 1662              		@ frame_needed = 0, uses_anonymous_args = 0
 1663 0000 10B5     		push	{r4, lr}
 1664              	.LCFI17:
 1665              		.cfi_def_cfa_offset 8
 1666              		.cfi_offset 4, -8
 1667              		.cfi_offset 14, -4
 679:Core/Src/adc.c ****     HAL_ADCEx_Calibration_Start(&hadc1,ADC_SINGLE_ENDED);
 1668              		.loc 1 679 5 view .LVU577
 1669 0002 054C     		ldr	r4, .L99
 1670 0004 7F21     		movs	r1, #127
 1671 0006 2046     		mov	r0, r4
 1672 0008 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1673              	.LVL93:
 680:Core/Src/adc.c ****     HAL_ADC_Start_DMA(&hadc1, Current_buffer, Current_buffer_LEN);  //(uint32_t*)&
 1674              		.loc 1 680 5 view .LVU578
 1675 000c 0822     		movs	r2, #8
 1676 000e 0349     		ldr	r1, .L99+4
 1677 0010 2046     		mov	r0, r4
 1678 0012 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1679              	.LVL94:
 681:Core/Src/adc.c **** }
 1680              		.loc 1 681 1 is_stmt 0 view .LVU579
 1681 0016 10BD     		pop	{r4, pc}
 1682              	.L100:
 1683              		.align	2
 1684              	.L99:
 1685 0018 00000000 		.word	.LANCHOR0
 1686 001c 00000000 		.word	Current_buffer
 1687              		.cfi_endproc
 1688              	.LFE337:
 1690              		.section	.text.Tempter_getvalue_A,"ax",%progbits
 1691              		.align	1
 1692              		.global	Tempter_getvalue_A
 1693              		.syntax unified
 1694              		.thumb
 1695              		.thumb_func
 1697              	Tempter_getvalue_A:
 1698              	.LFB338:
 682:Core/Src/adc.c **** void Tempter_getvalue_A()
 683:Core/Src/adc.c **** {
 1699              		.loc 1 683 1 is_stmt 1 view -0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703 0000 10B5     		push	{r4, lr}
 1704              	.LCFI18:
 1705              		.cfi_def_cfa_offset 8
 1706              		.cfi_offset 4, -8
 1707              		.cfi_offset 14, -4
ARM GAS  C:\temp\ccmYnzEf.s 			page 47


 684:Core/Src/adc.c ****     HAL_ADCEx_Calibration_Start(&hadc2,ADC_SINGLE_ENDED);
 1708              		.loc 1 684 5 view .LVU581
 1709 0002 054C     		ldr	r4, .L103
 1710 0004 7F21     		movs	r1, #127
 1711 0006 2046     		mov	r0, r4
 1712 0008 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1713              	.LVL95:
 685:Core/Src/adc.c ****     HAL_ADC_Start_DMA(&hadc2, tempter_A, 6);
 1714              		.loc 1 685 5 view .LVU582
 1715 000c 0622     		movs	r2, #6
 1716 000e 0349     		ldr	r1, .L103+4
 1717 0010 2046     		mov	r0, r4
 1718 0012 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1719              	.LVL96:
 686:Core/Src/adc.c **** 
 687:Core/Src/adc.c **** }
 1720              		.loc 1 687 1 is_stmt 0 view .LVU583
 1721 0016 10BD     		pop	{r4, pc}
 1722              	.L104:
 1723              		.align	2
 1724              	.L103:
 1725 0018 00000000 		.word	.LANCHOR1
 1726 001c 00000000 		.word	tempter_A
 1727              		.cfi_endproc
 1728              	.LFE338:
 1730              		.section	.text.Tempter_getvalue_B,"ax",%progbits
 1731              		.align	1
 1732              		.global	Tempter_getvalue_B
 1733              		.syntax unified
 1734              		.thumb
 1735              		.thumb_func
 1737              	Tempter_getvalue_B:
 1738              	.LFB339:
 688:Core/Src/adc.c **** void Tempter_getvalue_B()
 689:Core/Src/adc.c **** {
 1739              		.loc 1 689 1 is_stmt 1 view -0
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 0
 1742              		@ frame_needed = 0, uses_anonymous_args = 0
 1743 0000 08B5     		push	{r3, lr}
 1744              	.LCFI19:
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 3, -8
 1747              		.cfi_offset 14, -4
 690:Core/Src/adc.c ****     HAL_ADCEx_Calibration_Start(&hadc3,ADC_SINGLE_ENDED);
 1748              		.loc 1 690 5 view .LVU585
 1749 0002 7F21     		movs	r1, #127
 1750 0004 0448     		ldr	r0, .L107
 1751 0006 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1752              	.LVL97:
 691:Core/Src/adc.c ****     HAL_ADC_Start_DMA(&hadc2, tempter_B, 2);
 1753              		.loc 1 691 5 view .LVU586
 1754 000a 0222     		movs	r2, #2
 1755 000c 0349     		ldr	r1, .L107+4
 1756 000e 0448     		ldr	r0, .L107+8
 1757 0010 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1758              	.LVL98:
ARM GAS  C:\temp\ccmYnzEf.s 			page 48


 692:Core/Src/adc.c **** }
 1759              		.loc 1 692 1 is_stmt 0 view .LVU587
 1760 0014 08BD     		pop	{r3, pc}
 1761              	.L108:
 1762 0016 00BF     		.align	2
 1763              	.L107:
 1764 0018 00000000 		.word	.LANCHOR2
 1765 001c 00000000 		.word	tempter_B
 1766 0020 00000000 		.word	.LANCHOR1
 1767              		.cfi_endproc
 1768              	.LFE339:
 1770              		.section	.text.Volt_getvalue,"ax",%progbits
 1771              		.align	1
 1772              		.global	Volt_getvalue
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1777              	Volt_getvalue:
 1778              	.LFB340:
 693:Core/Src/adc.c **** void Volt_getvalue()
 694:Core/Src/adc.c **** {
 1779              		.loc 1 694 1 is_stmt 1 view -0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 0
 1782              		@ frame_needed = 0, uses_anonymous_args = 0
 1783              		@ link register save eliminated.
 695:Core/Src/adc.c **** 
 696:Core/Src/adc.c **** }
 1784              		.loc 1 696 1 view .LVU589
 1785 0000 7047     		bx	lr
 1786              		.cfi_endproc
 1787              	.LFE340:
 1789              		.section	.text.Watt_getvalue,"ax",%progbits
 1790              		.align	1
 1791              		.global	Watt_getvalue
 1792              		.syntax unified
 1793              		.thumb
 1794              		.thumb_func
 1796              	Watt_getvalue:
 1797              	.LFB341:
 697:Core/Src/adc.c **** void Watt_getvalue()
 698:Core/Src/adc.c **** {
 1798              		.loc 1 698 1 view -0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 0
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
 1802              		@ link register save eliminated.
 699:Core/Src/adc.c **** 
 700:Core/Src/adc.c **** }
 1803              		.loc 1 700 1 view .LVU591
 1804 0000 7047     		bx	lr
 1805              		.cfi_endproc
 1806              	.LFE341:
 1808              		.section	.text.input_scan,"ax",%progbits
 1809              		.align	1
 1810              		.global	input_scan
 1811              		.syntax unified
ARM GAS  C:\temp\ccmYnzEf.s 			page 49


 1812              		.thumb
 1813              		.thumb_func
 1815              	input_scan:
 1816              	.LFB342:
 701:Core/Src/adc.c **** void input_scan()
 702:Core/Src/adc.c **** {
 1817              		.loc 1 702 1 view -0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 0
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821 0000 08B5     		push	{r3, lr}
 1822              	.LCFI20:
 1823              		.cfi_def_cfa_offset 8
 1824              		.cfi_offset 3, -8
 1825              		.cfi_offset 14, -4
 703:Core/Src/adc.c ****     switch(Magic)
 1826              		.loc 1 703 5 view .LVU593
 1827 0002 274B     		ldr	r3, .L120
 1828 0004 1B68     		ldr	r3, [r3]
 1829 0006 032B     		cmp	r3, #3
 1830 0008 45D8     		bhi	.L112
 1831 000a DFE803F0 		tbb	[pc, r3]
 1832              	.L114:
 1833 000e 02       		.byte	(.L117-.L114)/2
 1834 000f 12       		.byte	(.L116-.L114)/2
 1835 0010 24       		.byte	(.L115-.L114)/2
 1836 0011 34       		.byte	(.L113-.L114)/2
 1837              		.p2align 1
 1838              	.L117:
 704:Core/Src/adc.c ****     {
 705:Core/Src/adc.c ****         case 0 :
 706:Core/Src/adc.c **** 
 707:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_SET);
 1839              		.loc 1 707 13 view .LVU594
 1840 0012 0122     		movs	r2, #1
 1841 0014 4FF40071 		mov	r1, #512
 1842 0018 2248     		ldr	r0, .L120+4
 1843 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1844              	.LVL99:
 708:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_SET);
 1845              		.loc 1 708 13 view .LVU595
 1846 001e 0122     		movs	r2, #1
 1847 0020 4FF40051 		mov	r1, #8192
 1848 0024 2048     		ldr	r0, .L120+8
 1849 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1850              	.LVL100:
 709:Core/Src/adc.c ****             Magic = 0;
 1851              		.loc 1 709 13 view .LVU596
 1852              		.loc 1 709 19 is_stmt 0 view .LVU597
 1853 002a 1D4B     		ldr	r3, .L120
 1854 002c 0022     		movs	r2, #0
 1855 002e 1A60     		str	r2, [r3]
 710:Core/Src/adc.c ****             break;
 1856              		.loc 1 710 13 is_stmt 1 view .LVU598
 1857              	.L111:
 711:Core/Src/adc.c ****         case 1 :
 712:Core/Src/adc.c **** 
ARM GAS  C:\temp\ccmYnzEf.s 			page 50


 713:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 714:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 715:Core/Src/adc.c ****             ubAnalogWatchdogStatus = RESET;
 716:Core/Src/adc.c ****             Magic = 0;
 717:Core/Src/adc.c ****             break;
 718:Core/Src/adc.c ****         case 2 :
 719:Core/Src/adc.c **** 
 720:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 721:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 722:Core/Src/adc.c ****            // TeAnalogWatchdogStatus = RESET;
 723:Core/Src/adc.c ****             Magic = 0;
 724:Core/Src/adc.c ****             break;
 725:Core/Src/adc.c ****         case 3 :
 726:Core/Src/adc.c **** 
 727:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 728:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 729:Core/Src/adc.c ****            // TeAnalogWatchdogStatus = RESET;
 730:Core/Src/adc.c ****             Magic = 0;
 731:Core/Src/adc.c **** 
 732:Core/Src/adc.c ****             break;
 733:Core/Src/adc.c **** 
 734:Core/Src/adc.c ****         default:Magic = 0; break;
 735:Core/Src/adc.c ****     }
 736:Core/Src/adc.c **** }
 1858              		.loc 1 736 1 is_stmt 0 view .LVU599
 1859 0030 08BD     		pop	{r3, pc}
 1860              	.L116:
 713:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 1861              		.loc 1 713 13 is_stmt 1 view .LVU600
 1862 0032 0022     		movs	r2, #0
 1863 0034 4FF40071 		mov	r1, #512
 1864 0038 1A48     		ldr	r0, .L120+4
 1865 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1866              	.LVL101:
 714:Core/Src/adc.c ****             ubAnalogWatchdogStatus = RESET;
 1867              		.loc 1 714 13 view .LVU601
 1868 003e 0022     		movs	r2, #0
 1869 0040 4FF40051 		mov	r1, #8192
 1870 0044 1848     		ldr	r0, .L120+8
 1871 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1872              	.LVL102:
 715:Core/Src/adc.c ****             Magic = 0;
 1873              		.loc 1 715 13 view .LVU602
 715:Core/Src/adc.c ****             Magic = 0;
 1874              		.loc 1 715 36 is_stmt 0 view .LVU603
 1875 004a 0023     		movs	r3, #0
 1876 004c 174A     		ldr	r2, .L120+12
 1877 004e 1360     		str	r3, [r2]
 716:Core/Src/adc.c ****             break;
 1878              		.loc 1 716 13 is_stmt 1 view .LVU604
 716:Core/Src/adc.c ****             break;
 1879              		.loc 1 716 19 is_stmt 0 view .LVU605
 1880 0050 134A     		ldr	r2, .L120
 1881 0052 1360     		str	r3, [r2]
 717:Core/Src/adc.c ****         case 2 :
 1882              		.loc 1 717 13 is_stmt 1 view .LVU606
 1883 0054 ECE7     		b	.L111
ARM GAS  C:\temp\ccmYnzEf.s 			page 51


 1884              	.L115:
 720:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 1885              		.loc 1 720 13 view .LVU607
 1886 0056 0022     		movs	r2, #0
 1887 0058 4FF40071 		mov	r1, #512
 1888 005c 1148     		ldr	r0, .L120+4
 1889 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1890              	.LVL103:
 721:Core/Src/adc.c ****            // TeAnalogWatchdogStatus = RESET;
 1891              		.loc 1 721 13 view .LVU608
 1892 0062 0022     		movs	r2, #0
 1893 0064 4FF40051 		mov	r1, #8192
 1894 0068 0F48     		ldr	r0, .L120+8
 1895 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1896              	.LVL104:
 723:Core/Src/adc.c ****             break;
 1897              		.loc 1 723 13 view .LVU609
 723:Core/Src/adc.c ****             break;
 1898              		.loc 1 723 19 is_stmt 0 view .LVU610
 1899 006e 0C4B     		ldr	r3, .L120
 1900 0070 0022     		movs	r2, #0
 1901 0072 1A60     		str	r2, [r3]
 724:Core/Src/adc.c ****         case 3 :
 1902              		.loc 1 724 13 is_stmt 1 view .LVU611
 1903 0074 DCE7     		b	.L111
 1904              	.L113:
 727:Core/Src/adc.c ****             HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 1905              		.loc 1 727 13 view .LVU612
 1906 0076 0022     		movs	r2, #0
 1907 0078 4FF40071 		mov	r1, #512
 1908 007c 0948     		ldr	r0, .L120+4
 1909 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1910              	.LVL105:
 728:Core/Src/adc.c ****            // TeAnalogWatchdogStatus = RESET;
 1911              		.loc 1 728 13 view .LVU613
 1912 0082 0022     		movs	r2, #0
 1913 0084 4FF40051 		mov	r1, #8192
 1914 0088 0748     		ldr	r0, .L120+8
 1915 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1916              	.LVL106:
 730:Core/Src/adc.c **** 
 1917              		.loc 1 730 13 view .LVU614
 730:Core/Src/adc.c **** 
 1918              		.loc 1 730 19 is_stmt 0 view .LVU615
 1919 008e 044B     		ldr	r3, .L120
 1920 0090 0022     		movs	r2, #0
 1921 0092 1A60     		str	r2, [r3]
 732:Core/Src/adc.c **** 
 1922              		.loc 1 732 13 is_stmt 1 view .LVU616
 1923 0094 CCE7     		b	.L111
 1924              	.L112:
 734:Core/Src/adc.c ****     }
 1925              		.loc 1 734 17 view .LVU617
 734:Core/Src/adc.c ****     }
 1926              		.loc 1 734 23 is_stmt 0 view .LVU618
 1927 0096 024B     		ldr	r3, .L120
 1928 0098 0022     		movs	r2, #0
ARM GAS  C:\temp\ccmYnzEf.s 			page 52


 1929 009a 1A60     		str	r2, [r3]
 734:Core/Src/adc.c ****     }
 1930              		.loc 1 734 28 is_stmt 1 view .LVU619
 1931              		.loc 1 736 1 is_stmt 0 view .LVU620
 1932 009c C8E7     		b	.L111
 1933              	.L121:
 1934 009e 00BF     		.align	2
 1935              	.L120:
 1936 00a0 00000000 		.word	Magic
 1937 00a4 00100048 		.word	1207963648
 1938 00a8 00080048 		.word	1207961600
 1939 00ac 00000000 		.word	ubAnalogWatchdogStatus
 1940              		.cfi_endproc
 1941              	.LFE342:
 1943              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1944              		.align	1
 1945              		.global	HAL_ADC_LevelOutOfWindowCallback
 1946              		.syntax unified
 1947              		.thumb
 1948              		.thumb_func
 1950              	HAL_ADC_LevelOutOfWindowCallback:
 1951              	.LVL107:
 1952              	.LFB343:
 737:Core/Src/adc.c **** void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
 738:Core/Src/adc.c **** {
 1953              		.loc 1 738 1 is_stmt 1 view -0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 1957              		@ link register save eliminated.
 739:Core/Src/adc.c ****     //    if(hadc->Instance == ADC1)  //”√”⁄«¯± «ƒƒ∏ˆDMA≤˙…˙µƒ÷–∂œ
 740:Core/Src/adc.c ****   //  ubAnalogWatchdogStatus = SET;
 741:Core/Src/adc.c ****     //    else (hadc->Instance == ADC2)
 742:Core/Src/adc.c **** 
 743:Core/Src/adc.c ****     if(hadc == &hadc1)  //”√”⁄«¯± «ƒƒ∏ˆDMA≤˙…˙µƒ÷–∂œ
 1958              		.loc 1 743 5 view .LVU622
 1959              		.loc 1 743 7 is_stmt 0 view .LVU623
 1960 0000 084B     		ldr	r3, .L128
 1961 0002 9842     		cmp	r0, r3
 1962 0004 06D0     		beq	.L126
 744:Core/Src/adc.c ****         {
 745:Core/Src/adc.c ****             //ubAnalogWatchdogStatus = SET;
 746:Core/Src/adc.c ****             Magic = 1;
 747:Core/Src/adc.c ****         }
 748:Core/Src/adc.c ****    else if(hadc == &hadc2)  //”√”⁄«¯± «ƒƒ∏ˆDMA≤˙…˙µƒ÷–∂œ
 1963              		.loc 1 748 9 is_stmt 1 view .LVU624
 1964              		.loc 1 748 11 is_stmt 0 view .LVU625
 1965 0006 084B     		ldr	r3, .L128+4
 1966 0008 9842     		cmp	r0, r3
 1967 000a 07D0     		beq	.L127
 749:Core/Src/adc.c ****     {
 750:Core/Src/adc.c ****         //   TeAnalogWatchdogStatus = SET;
 751:Core/Src/adc.c ****         Magic = 2;
 752:Core/Src/adc.c ****     }
 753:Core/Src/adc.c **** 
 754:Core/Src/adc.c ****      else Magic = 0;
 1968              		.loc 1 754 11 is_stmt 1 view .LVU626
ARM GAS  C:\temp\ccmYnzEf.s 			page 53


 1969              		.loc 1 754 17 is_stmt 0 view .LVU627
 1970 000c 074B     		ldr	r3, .L128+8
 1971 000e 0022     		movs	r2, #0
 1972 0010 1A60     		str	r2, [r3]
 755:Core/Src/adc.c **** 
 756:Core/Src/adc.c **** }
 1973              		.loc 1 756 1 view .LVU628
 1974 0012 7047     		bx	lr
 1975              	.L126:
 746:Core/Src/adc.c ****         }
 1976              		.loc 1 746 13 is_stmt 1 view .LVU629
 746:Core/Src/adc.c ****         }
 1977              		.loc 1 746 19 is_stmt 0 view .LVU630
 1978 0014 054B     		ldr	r3, .L128+8
 1979 0016 0122     		movs	r2, #1
 1980 0018 1A60     		str	r2, [r3]
 1981 001a 7047     		bx	lr
 1982              	.L127:
 751:Core/Src/adc.c ****     }
 1983              		.loc 1 751 9 is_stmt 1 view .LVU631
 751:Core/Src/adc.c ****     }
 1984              		.loc 1 751 15 is_stmt 0 view .LVU632
 1985 001c 034B     		ldr	r3, .L128+8
 1986 001e 0222     		movs	r2, #2
 1987 0020 1A60     		str	r2, [r3]
 1988 0022 7047     		bx	lr
 1989              	.L129:
 1990              		.align	2
 1991              	.L128:
 1992 0024 00000000 		.word	.LANCHOR0
 1993 0028 00000000 		.word	.LANCHOR1
 1994 002c 00000000 		.word	Magic
 1995              		.cfi_endproc
 1996              	.LFE343:
 1998              		.section	.text.HAL_ADC_LevelOutOfWindowCallback2,"ax",%progbits
 1999              		.align	1
 2000              		.global	HAL_ADC_LevelOutOfWindowCallback2
 2001              		.syntax unified
 2002              		.thumb
 2003              		.thumb_func
 2005              	HAL_ADC_LevelOutOfWindowCallback2:
 2006              	.LVL108:
 2007              	.LFB344:
 757:Core/Src/adc.c **** void HAL_ADC_LevelOutOfWindowCallback2(ADC_HandleTypeDef* hadc)
 758:Core/Src/adc.c **** {
 2008              		.loc 1 758 1 is_stmt 1 view -0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
 759:Core/Src/adc.c **** 
 760:Core/Src/adc.c **** }
 2013              		.loc 1 760 1 view .LVU634
 2014 0000 7047     		bx	lr
 2015              		.cfi_endproc
 2016              	.LFE344:
 2018              		.global	hdma_adc3
ARM GAS  C:\temp\ccmYnzEf.s 			page 54


 2019              		.global	hdma_adc2
 2020              		.global	hdma_adc1
 2021              		.global	hadc3
 2022              		.global	hadc2
 2023              		.global	hadc1
 2024              		.section	.bss.HAL_RCC_ADC12_CLK_ENABLED,"aw",%nobits
 2025              		.align	2
 2026              		.set	.LANCHOR3,. + 0
 2029              	HAL_RCC_ADC12_CLK_ENABLED:
 2030 0000 00000000 		.space	4
 2031              		.section	.bss.hadc1,"aw",%nobits
 2032              		.align	2
 2033              		.set	.LANCHOR0,. + 0
 2036              	hadc1:
 2037 0000 00000000 		.space	108
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2038              		.section	.bss.hadc2,"aw",%nobits
 2039              		.align	2
 2040              		.set	.LANCHOR1,. + 0
 2043              	hadc2:
 2044 0000 00000000 		.space	108
 2044      00000000 
 2044      00000000 
 2044      00000000 
 2044      00000000 
 2045              		.section	.bss.hadc3,"aw",%nobits
 2046              		.align	2
 2047              		.set	.LANCHOR2,. + 0
 2050              	hadc3:
 2051 0000 00000000 		.space	108
 2051      00000000 
 2051      00000000 
 2051      00000000 
 2051      00000000 
 2052              		.section	.bss.hdma_adc1,"aw",%nobits
 2053              		.align	2
 2054              		.set	.LANCHOR4,. + 0
 2057              	hdma_adc1:
 2058 0000 00000000 		.space	96
 2058      00000000 
 2058      00000000 
 2058      00000000 
 2058      00000000 
 2059              		.section	.bss.hdma_adc2,"aw",%nobits
 2060              		.align	2
 2061              		.set	.LANCHOR5,. + 0
 2064              	hdma_adc2:
 2065 0000 00000000 		.space	96
 2065      00000000 
 2065      00000000 
 2065      00000000 
 2065      00000000 
 2066              		.section	.bss.hdma_adc3,"aw",%nobits
 2067              		.align	2
ARM GAS  C:\temp\ccmYnzEf.s 			page 55


 2068              		.set	.LANCHOR6,. + 0
 2071              	hdma_adc3:
 2072 0000 00000000 		.space	96
 2072      00000000 
 2072      00000000 
 2072      00000000 
 2072      00000000 
 2073              		.text
 2074              	.Letext0:
 2075              		.file 2 "d:\\clion\\gcc\\lujing\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 2076              		.file 3 "d:\\clion\\gcc\\lujing\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 2077              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g473xx.h"
 2078              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 2079              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 2080              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc_ex.h"
 2081              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 2082              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 2083              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 2084              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h"
 2085              		.file 12 "Core/Inc/main.h"
 2086              		.file 13 "Core/Inc/adc.h"
 2087              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 2088              		.file 15 "<built-in>"
ARM GAS  C:\temp\ccmYnzEf.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
  C:\temp\ccmYnzEf.s:20     .text.MX_ADC1_Init:00000000 $t
  C:\temp\ccmYnzEf.s:26     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
  C:\temp\ccmYnzEf.s:396    .text.MX_ADC1_Init:00000194 $d
  C:\temp\ccmYnzEf.s:410    .text.MX_ADC2_Init:00000000 $t
  C:\temp\ccmYnzEf.s:416    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
  C:\temp\ccmYnzEf.s:715    .text.MX_ADC2_Init:00000140 $d
  C:\temp\ccmYnzEf.s:728    .text.MX_ADC3_Init:00000000 $t
  C:\temp\ccmYnzEf.s:734    .text.MX_ADC3_Init:00000000 MX_ADC3_Init
  C:\temp\ccmYnzEf.s:917    .text.MX_ADC3_Init:000000b0 $d
  C:\temp\ccmYnzEf.s:925    .text.HAL_ADC_MspInit:00000000 $t
  C:\temp\ccmYnzEf.s:931    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
  C:\temp\ccmYnzEf.s:1489   .text.HAL_ADC_MspInit:00000274 $d
  C:\temp\ccmYnzEf.s:1505   .text.HAL_ADC_MspDeInit:00000000 $t
  C:\temp\ccmYnzEf.s:1511   .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
  C:\temp\ccmYnzEf.s:1641   .text.HAL_ADC_MspDeInit:0000009c $d
  C:\temp\ccmYnzEf.s:1651   .text.Current_getvalue:00000000 $t
  C:\temp\ccmYnzEf.s:1657   .text.Current_getvalue:00000000 Current_getvalue
  C:\temp\ccmYnzEf.s:1685   .text.Current_getvalue:00000018 $d
  C:\temp\ccmYnzEf.s:1691   .text.Tempter_getvalue_A:00000000 $t
  C:\temp\ccmYnzEf.s:1697   .text.Tempter_getvalue_A:00000000 Tempter_getvalue_A
  C:\temp\ccmYnzEf.s:1725   .text.Tempter_getvalue_A:00000018 $d
  C:\temp\ccmYnzEf.s:1731   .text.Tempter_getvalue_B:00000000 $t
  C:\temp\ccmYnzEf.s:1737   .text.Tempter_getvalue_B:00000000 Tempter_getvalue_B
  C:\temp\ccmYnzEf.s:1764   .text.Tempter_getvalue_B:00000018 $d
  C:\temp\ccmYnzEf.s:1771   .text.Volt_getvalue:00000000 $t
  C:\temp\ccmYnzEf.s:1777   .text.Volt_getvalue:00000000 Volt_getvalue
  C:\temp\ccmYnzEf.s:1790   .text.Watt_getvalue:00000000 $t
  C:\temp\ccmYnzEf.s:1796   .text.Watt_getvalue:00000000 Watt_getvalue
  C:\temp\ccmYnzEf.s:1809   .text.input_scan:00000000 $t
  C:\temp\ccmYnzEf.s:1815   .text.input_scan:00000000 input_scan
  C:\temp\ccmYnzEf.s:1833   .text.input_scan:0000000e $d
  C:\temp\ccmYnzEf.s:1837   .text.input_scan:00000012 $t
  C:\temp\ccmYnzEf.s:1936   .text.input_scan:000000a0 $d
  C:\temp\ccmYnzEf.s:1944   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
  C:\temp\ccmYnzEf.s:1950   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
  C:\temp\ccmYnzEf.s:1992   .text.HAL_ADC_LevelOutOfWindowCallback:00000024 $d
  C:\temp\ccmYnzEf.s:1999   .text.HAL_ADC_LevelOutOfWindowCallback2:00000000 $t
  C:\temp\ccmYnzEf.s:2005   .text.HAL_ADC_LevelOutOfWindowCallback2:00000000 HAL_ADC_LevelOutOfWindowCallback2
  C:\temp\ccmYnzEf.s:2071   .bss.hdma_adc3:00000000 hdma_adc3
  C:\temp\ccmYnzEf.s:2064   .bss.hdma_adc2:00000000 hdma_adc2
  C:\temp\ccmYnzEf.s:2057   .bss.hdma_adc1:00000000 hdma_adc1
  C:\temp\ccmYnzEf.s:2050   .bss.hadc3:00000000 hadc3
  C:\temp\ccmYnzEf.s:2043   .bss.hadc2:00000000 hadc2
  C:\temp\ccmYnzEf.s:2036   .bss.hadc1:00000000 hadc1
  C:\temp\ccmYnzEf.s:2025   .bss.HAL_RCC_ADC12_CLK_ENABLED:00000000 $d
  C:\temp\ccmYnzEf.s:2029   .bss.HAL_RCC_ADC12_CLK_ENABLED:00000000 HAL_RCC_ADC12_CLK_ENABLED
  C:\temp\ccmYnzEf.s:2032   .bss.hadc1:00000000 $d
  C:\temp\ccmYnzEf.s:2039   .bss.hadc2:00000000 $d
  C:\temp\ccmYnzEf.s:2046   .bss.hadc3:00000000 $d
  C:\temp\ccmYnzEf.s:2053   .bss.hdma_adc1:00000000 $d
  C:\temp\ccmYnzEf.s:2060   .bss.hdma_adc2:00000000 $d
  C:\temp\ccmYnzEf.s:2067   .bss.hdma_adc3:00000000 $d

UNDEFINED SYMBOLS
memset
ARM GAS  C:\temp\ccmYnzEf.s 			page 57


HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_AnalogWDGConfig
HAL_ADC_ConfigChannel
Error_Handler
HAL_RCCEx_PeriphCLKConfig
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
HAL_ADCEx_Calibration_Start
HAL_ADC_Start_DMA
Current_buffer
tempter_A
tempter_B
HAL_GPIO_WritePin
Magic
ubAnalogWatchdogStatus
